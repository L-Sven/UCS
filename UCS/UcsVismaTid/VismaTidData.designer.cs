#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UcsVismaTid
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name= "SPCS_Tid_Ftg1")]
	public partial class VismaTidDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTimeReport(TimeReport instance);
    partial void UpdateTimeReport(TimeReport instance);
    partial void DeleteTimeReport(TimeReport instance);
    partial void InsertTimeCode(TimeCode instance);
    partial void UpdateTimeCode(TimeCode instance);
    partial void DeleteTimeCode(TimeCode instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProgramUser(ProgramUser instance);
    partial void UpdateProgramUser(ProgramUser instance);
    partial void DeleteProgramUser(ProgramUser instance);
    partial void InsertProgramUserCalcPrice(ProgramUserCalcPrice instance);
    partial void UpdateProgramUserCalcPrice(ProgramUserCalcPrice instance);
    partial void DeleteProgramUserCalcPrice(ProgramUserCalcPrice instance);
    partial void InsertProgramUserGroup(ProgramUserGroup instance);
    partial void UpdateProgramUserGroup(ProgramUserGroup instance);
    partial void DeleteProgramUserGroup(ProgramUserGroup instance);
    partial void InsertProgramUserSchedule(ProgramUserSchedule instance);
    partial void UpdateProgramUserSchedule(ProgramUserSchedule instance);
    partial void DeleteProgramUserSchedule(ProgramUserSchedule instance);
    partial void InsertPricing(Pricing instance);
    partial void UpdatePricing(Pricing instance);
    partial void DeletePricing(Pricing instance);
    partial void InsertPriceList(PriceList instance);
    partial void UpdatePriceList(PriceList instance);
    partial void DeletePriceList(PriceList instance);
    partial void InsertPriceListPeriod(PriceListPeriod instance);
    partial void UpdatePriceListPeriod(PriceListPeriod instance);
    partial void DeletePriceListPeriod(PriceListPeriod instance);
    partial void InsertParticipant(Participant instance);
    partial void UpdateParticipant(Participant instance);
    partial void DeleteParticipant(Participant instance);
    partial void InsertFreeDay(FreeDay instance);
    partial void UpdateFreeDay(FreeDay instance);
    partial void DeleteFreeDay(FreeDay instance);
    partial void InsertBookResultUnit(BookResultUnit instance);
    partial void UpdateBookResultUnit(BookResultUnit instance);
    partial void DeleteBookResultUnit(BookResultUnit instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertScheduleRow(ScheduleRow instance);
    partial void UpdateScheduleRow(ScheduleRow instance);
    partial void DeleteScheduleRow(ScheduleRow instance);
    partial void InsertCustomerCategory(CustomerCategory instance);
    partial void UpdateCustomerCategory(CustomerCategory instance);
    partial void DeleteCustomerCategory(CustomerCategory instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertProjectCategory(ProjectCategory instance);
    partial void UpdateProjectCategory(ProjectCategory instance);
    partial void DeleteProjectCategory(ProjectCategory instance);
    partial void InsertProjectHdr(ProjectHdr instance);
    partial void UpdateProjectHdr(ProjectHdr instance);
    partial void DeleteProjectHdr(ProjectHdr instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceSettingRowDetail(InvoiceSettingRowDetail instance);
    partial void UpdateInvoiceSettingRowDetail(InvoiceSettingRowDetail instance);
    partial void DeleteInvoiceSettingRowDetail(InvoiceSettingRowDetail instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    #endregion
		
		public VismaTidDataDataContext() : 
				base(global::UcsVismaTid.Properties.Settings.Default.SPCS_Tid_OvnBol2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VismaTidDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VismaTidDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VismaTidDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VismaTidDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TimeReport> TimeReports
		{
			get
			{
				return this.GetTable<TimeReport>();
			}
		}
		
		public System.Data.Linq.Table<TimeCode> TimeCodes
		{
			get
			{
				return this.GetTable<TimeCode>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProgramUser> ProgramUsers
		{
			get
			{
				return this.GetTable<ProgramUser>();
			}
		}
		
		public System.Data.Linq.Table<ProgramUserCalcPrice> ProgramUserCalcPrices
		{
			get
			{
				return this.GetTable<ProgramUserCalcPrice>();
			}
		}
		
		public System.Data.Linq.Table<ProgramUserGroup> ProgramUserGroups
		{
			get
			{
				return this.GetTable<ProgramUserGroup>();
			}
		}
		
		public System.Data.Linq.Table<ProgramUserSchedule> ProgramUserSchedules
		{
			get
			{
				return this.GetTable<ProgramUserSchedule>();
			}
		}
		
		public System.Data.Linq.Table<Pricing> Pricings
		{
			get
			{
				return this.GetTable<Pricing>();
			}
		}
		
		public System.Data.Linq.Table<PriceList> PriceLists
		{
			get
			{
				return this.GetTable<PriceList>();
			}
		}
		
		public System.Data.Linq.Table<PriceListPeriod> PriceListPeriods
		{
			get
			{
				return this.GetTable<PriceListPeriod>();
			}
		}
		
		public System.Data.Linq.Table<Participant> Participants
		{
			get
			{
				return this.GetTable<Participant>();
			}
		}
		
		public System.Data.Linq.Table<FreeDay> FreeDays
		{
			get
			{
				return this.GetTable<FreeDay>();
			}
		}
		
		public System.Data.Linq.Table<BookResultUnit> BookResultUnits
		{
			get
			{
				return this.GetTable<BookResultUnit>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<ScheduleRow> ScheduleRows
		{
			get
			{
				return this.GetTable<ScheduleRow>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCategory> CustomerCategories
		{
			get
			{
				return this.GetTable<CustomerCategory>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<ProjectCategory> ProjectCategories
		{
			get
			{
				return this.GetTable<ProjectCategory>();
			}
		}
		
		public System.Data.Linq.Table<ProjectHdr> ProjectHdrs
		{
			get
			{
				return this.GetTable<ProjectHdr>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceSettingRowDetail> InvoiceSettingRowDetails
		{
			get
			{
				return this.GetTable<InvoiceSettingRowDetail>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeReport")]
	public partial class TimeReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeReportId;
		
		private System.Nullable<System.DateTime> _DateOfReport;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _AccountsYearId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<int> _ActivityId;
		
		private System.Nullable<int> _BookResultUnitId;
		
		private System.Nullable<int> _ProgramUserId;
		
		private System.Nullable<int> _TimeCodeId;
		
		private System.Nullable<int> _TimeStart;
		
		private System.Nullable<int> _TimeEnd;
		
		private System.Nullable<decimal> _HourOfReport;
		
		private System.Nullable<decimal> _HourToInvoice;
		
		private string _ExtraInvoiceNote;
		
		private string _InternNote;
		
		private bool _ShowWeekday;
		
		private System.Nullable<decimal> _Quantity;
		
		private bool _TmpTimeReport;
		
		private System.Nullable<decimal> _NormalWorkingTimeHours;
		
		private bool _ChangedNormalWorkingTime;
		
		private bool _FlexAndNormalWorkingTime;
		
		private System.Nullable<decimal> _FlexTimeHours;
		
		private bool _bAdjustment;
		
		private System.Nullable<decimal> _Price;
		
		private bool _PriceAdjusted;
		
		private System.Nullable<decimal> _CalcPrice;
		
		private System.Nullable<decimal> _Adjustment;
		
		private string _InvoiceComment;
		
		private System.Nullable<int> _InvoiceId;
		
		private string _AdjustComment;
		
		private bool _TimeAdjustment;
		
		private bool _TimeSaldonSalary;
		
		private System.Nullable<int> _AdjustedSalaryId;
		
		private bool _TmpTimeSaldon;
		
		private System.Nullable<decimal> _AdjustmentTotalPrice;
		
		private System.Nullable<System.DateTime> _LastCheckInOut;
		
		private System.Nullable<int> _ProjectInvoiceSettingRowId;
		
		private System.Nullable<int> _CustomerInvoiceSettingRowId;
		
		private string _TimeReportGuid;
		
		private EntityRef<TimeCode> _TimeCode;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
		private EntityRef<BookResultUnit> _BookResultUnit;
		
		private EntityRef<Activity> _Activity;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeReportIdChanging(int value);
    partial void OnTimeReportIdChanged();
    partial void OnDateOfReportChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfReportChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnAccountsYearIdChanging(System.Nullable<int> value);
    partial void OnAccountsYearIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnActivityIdChanging(System.Nullable<int> value);
    partial void OnActivityIdChanged();
    partial void OnBookResultUnitIdChanging(System.Nullable<int> value);
    partial void OnBookResultUnitIdChanged();
    partial void OnProgramUserIdChanging(System.Nullable<int> value);
    partial void OnProgramUserIdChanged();
    partial void OnTimeCodeIdChanging(System.Nullable<int> value);
    partial void OnTimeCodeIdChanged();
    partial void OnTimeStartChanging(System.Nullable<int> value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.Nullable<int> value);
    partial void OnTimeEndChanged();
    partial void OnHourOfReportChanging(System.Nullable<decimal> value);
    partial void OnHourOfReportChanged();
    partial void OnHourToInvoiceChanging(System.Nullable<decimal> value);
    partial void OnHourToInvoiceChanged();
    partial void OnExtraInvoiceNoteChanging(string value);
    partial void OnExtraInvoiceNoteChanged();
    partial void OnInternNoteChanging(string value);
    partial void OnInternNoteChanged();
    partial void OnShowWeekdayChanging(bool value);
    partial void OnShowWeekdayChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnTmpTimeReportChanging(bool value);
    partial void OnTmpTimeReportChanged();
    partial void OnNormalWorkingTimeHoursChanging(System.Nullable<decimal> value);
    partial void OnNormalWorkingTimeHoursChanged();
    partial void OnChangedNormalWorkingTimeChanging(bool value);
    partial void OnChangedNormalWorkingTimeChanged();
    partial void OnFlexAndNormalWorkingTimeChanging(bool value);
    partial void OnFlexAndNormalWorkingTimeChanged();
    partial void OnFlexTimeHoursChanging(System.Nullable<decimal> value);
    partial void OnFlexTimeHoursChanged();
    partial void OnbAdjustmentChanging(bool value);
    partial void OnbAdjustmentChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnPriceAdjustedChanging(bool value);
    partial void OnPriceAdjustedChanged();
    partial void OnCalcPriceChanging(System.Nullable<decimal> value);
    partial void OnCalcPriceChanged();
    partial void OnAdjustmentChanging(System.Nullable<decimal> value);
    partial void OnAdjustmentChanged();
    partial void OnInvoiceCommentChanging(string value);
    partial void OnInvoiceCommentChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnAdjustCommentChanging(string value);
    partial void OnAdjustCommentChanged();
    partial void OnTimeAdjustmentChanging(bool value);
    partial void OnTimeAdjustmentChanged();
    partial void OnTimeSaldonSalaryChanging(bool value);
    partial void OnTimeSaldonSalaryChanged();
    partial void OnAdjustedSalaryIdChanging(System.Nullable<int> value);
    partial void OnAdjustedSalaryIdChanged();
    partial void OnTmpTimeSaldonChanging(bool value);
    partial void OnTmpTimeSaldonChanged();
    partial void OnAdjustmentTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnAdjustmentTotalPriceChanged();
    partial void OnLastCheckInOutChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckInOutChanged();
    partial void OnProjectInvoiceSettingRowIdChanging(System.Nullable<int> value);
    partial void OnProjectInvoiceSettingRowIdChanged();
    partial void OnCustomerInvoiceSettingRowIdChanging(System.Nullable<int> value);
    partial void OnCustomerInvoiceSettingRowIdChanged();
    partial void OnTimeReportGuidChanging(string value);
    partial void OnTimeReportGuidChanged();
    #endregion
		
		public TimeReport()
		{
			this._TimeCode = default(EntityRef<TimeCode>);
			this._Project = default(EntityRef<Project>);
			this._ProgramUser = default(EntityRef<ProgramUser>);
			this._BookResultUnit = default(EntityRef<BookResultUnit>);
			this._Activity = default(EntityRef<Activity>);
			this._Customer = default(EntityRef<Customer>);
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeReportId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TimeReportId
		{
			get
			{
				return this._TimeReportId;
			}
			set
			{
				if ((this._TimeReportId != value))
				{
					this.OnTimeReportIdChanging(value);
					this.SendPropertyChanging();
					this._TimeReportId = value;
					this.SendPropertyChanged("TimeReportId");
					this.OnTimeReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfReport", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateOfReport
		{
			get
			{
				return this._DateOfReport;
			}
			set
			{
				if ((this._DateOfReport != value))
				{
					this.OnDateOfReportChanging(value);
					this.SendPropertyChanging();
					this._DateOfReport = value;
					this.SendPropertyChanged("DateOfReport");
					this.OnDateOfReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountsYearId", DbType="Int")]
		public System.Nullable<int> AccountsYearId
		{
			get
			{
				return this._AccountsYearId;
			}
			set
			{
				if ((this._AccountsYearId != value))
				{
					this.OnAccountsYearIdChanging(value);
					this.SendPropertyChanging();
					this._AccountsYearId = value;
					this.SendPropertyChanged("AccountsYearId");
					this.OnAccountsYearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int")]
		public System.Nullable<int> ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookResultUnitId", DbType="Int")]
		public System.Nullable<int> BookResultUnitId
		{
			get
			{
				return this._BookResultUnitId;
			}
			set
			{
				if ((this._BookResultUnitId != value))
				{
					if (this._BookResultUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookResultUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BookResultUnitId = value;
					this.SendPropertyChanged("BookResultUnitId");
					this.OnBookResultUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int")]
		public System.Nullable<int> ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCodeId", DbType="Int")]
		public System.Nullable<int> TimeCodeId
		{
			get
			{
				return this._TimeCodeId;
			}
			set
			{
				if ((this._TimeCodeId != value))
				{
					if (this._TimeCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimeCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TimeCodeId = value;
					this.SendPropertyChanged("TimeCodeId");
					this.OnTimeCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="Int")]
		public System.Nullable<int> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="Int")]
		public System.Nullable<int> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourOfReport", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> HourOfReport
		{
			get
			{
				return this._HourOfReport;
			}
			set
			{
				if ((this._HourOfReport != value))
				{
					this.OnHourOfReportChanging(value);
					this.SendPropertyChanging();
					this._HourOfReport = value;
					this.SendPropertyChanged("HourOfReport");
					this.OnHourOfReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourToInvoice", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> HourToInvoice
		{
			get
			{
				return this._HourToInvoice;
			}
			set
			{
				if ((this._HourToInvoice != value))
				{
					this.OnHourToInvoiceChanging(value);
					this.SendPropertyChanging();
					this._HourToInvoice = value;
					this.SendPropertyChanged("HourToInvoice");
					this.OnHourToInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraInvoiceNote", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string ExtraInvoiceNote
		{
			get
			{
				return this._ExtraInvoiceNote;
			}
			set
			{
				if ((this._ExtraInvoiceNote != value))
				{
					this.OnExtraInvoiceNoteChanging(value);
					this.SendPropertyChanging();
					this._ExtraInvoiceNote = value;
					this.SendPropertyChanged("ExtraInvoiceNote");
					this.OnExtraInvoiceNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternNote", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string InternNote
		{
			get
			{
				return this._InternNote;
			}
			set
			{
				if ((this._InternNote != value))
				{
					this.OnInternNoteChanging(value);
					this.SendPropertyChanging();
					this._InternNote = value;
					this.SendPropertyChanged("InternNote");
					this.OnInternNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowWeekday", DbType="Bit NOT NULL")]
		public bool ShowWeekday
		{
			get
			{
				return this._ShowWeekday;
			}
			set
			{
				if ((this._ShowWeekday != value))
				{
					this.OnShowWeekdayChanging(value);
					this.SendPropertyChanging();
					this._ShowWeekday = value;
					this.SendPropertyChanged("ShowWeekday");
					this.OnShowWeekdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TmpTimeReport", DbType="Bit NOT NULL")]
		public bool TmpTimeReport
		{
			get
			{
				return this._TmpTimeReport;
			}
			set
			{
				if ((this._TmpTimeReport != value))
				{
					this.OnTmpTimeReportChanging(value);
					this.SendPropertyChanging();
					this._TmpTimeReport = value;
					this.SendPropertyChanged("TmpTimeReport");
					this.OnTmpTimeReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalWorkingTimeHours", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> NormalWorkingTimeHours
		{
			get
			{
				return this._NormalWorkingTimeHours;
			}
			set
			{
				if ((this._NormalWorkingTimeHours != value))
				{
					this.OnNormalWorkingTimeHoursChanging(value);
					this.SendPropertyChanging();
					this._NormalWorkingTimeHours = value;
					this.SendPropertyChanged("NormalWorkingTimeHours");
					this.OnNormalWorkingTimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedNormalWorkingTime", DbType="Bit NOT NULL")]
		public bool ChangedNormalWorkingTime
		{
			get
			{
				return this._ChangedNormalWorkingTime;
			}
			set
			{
				if ((this._ChangedNormalWorkingTime != value))
				{
					this.OnChangedNormalWorkingTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangedNormalWorkingTime = value;
					this.SendPropertyChanged("ChangedNormalWorkingTime");
					this.OnChangedNormalWorkingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlexAndNormalWorkingTime", DbType="Bit NOT NULL")]
		public bool FlexAndNormalWorkingTime
		{
			get
			{
				return this._FlexAndNormalWorkingTime;
			}
			set
			{
				if ((this._FlexAndNormalWorkingTime != value))
				{
					this.OnFlexAndNormalWorkingTimeChanging(value);
					this.SendPropertyChanging();
					this._FlexAndNormalWorkingTime = value;
					this.SendPropertyChanged("FlexAndNormalWorkingTime");
					this.OnFlexAndNormalWorkingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlexTimeHours", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> FlexTimeHours
		{
			get
			{
				return this._FlexTimeHours;
			}
			set
			{
				if ((this._FlexTimeHours != value))
				{
					this.OnFlexTimeHoursChanging(value);
					this.SendPropertyChanging();
					this._FlexTimeHours = value;
					this.SendPropertyChanged("FlexTimeHours");
					this.OnFlexTimeHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bAdjustment", DbType="Bit NOT NULL")]
		public bool bAdjustment
		{
			get
			{
				return this._bAdjustment;
			}
			set
			{
				if ((this._bAdjustment != value))
				{
					this.OnbAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._bAdjustment = value;
					this.SendPropertyChanged("bAdjustment");
					this.OnbAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAdjusted", DbType="Bit NOT NULL")]
		public bool PriceAdjusted
		{
			get
			{
				return this._PriceAdjusted;
			}
			set
			{
				if ((this._PriceAdjusted != value))
				{
					this.OnPriceAdjustedChanging(value);
					this.SendPropertyChanging();
					this._PriceAdjusted = value;
					this.SendPropertyChanged("PriceAdjusted");
					this.OnPriceAdjustedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcPrice
		{
			get
			{
				return this._CalcPrice;
			}
			set
			{
				if ((this._CalcPrice != value))
				{
					this.OnCalcPriceChanging(value);
					this.SendPropertyChanging();
					this._CalcPrice = value;
					this.SendPropertyChanged("CalcPrice");
					this.OnCalcPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adjustment", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Adjustment
		{
			get
			{
				return this._Adjustment;
			}
			set
			{
				if ((this._Adjustment != value))
				{
					this.OnAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._Adjustment = value;
					this.SendPropertyChanged("Adjustment");
					this.OnAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceComment", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string InvoiceComment
		{
			get
			{
				return this._InvoiceComment;
			}
			set
			{
				if ((this._InvoiceComment != value))
				{
					this.OnInvoiceCommentChanging(value);
					this.SendPropertyChanging();
					this._InvoiceComment = value;
					this.SendPropertyChanged("InvoiceComment");
					this.OnInvoiceCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustComment", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AdjustComment
		{
			get
			{
				return this._AdjustComment;
			}
			set
			{
				if ((this._AdjustComment != value))
				{
					this.OnAdjustCommentChanging(value);
					this.SendPropertyChanging();
					this._AdjustComment = value;
					this.SendPropertyChanged("AdjustComment");
					this.OnAdjustCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeAdjustment", DbType="Bit NOT NULL")]
		public bool TimeAdjustment
		{
			get
			{
				return this._TimeAdjustment;
			}
			set
			{
				if ((this._TimeAdjustment != value))
				{
					this.OnTimeAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._TimeAdjustment = value;
					this.SendPropertyChanged("TimeAdjustment");
					this.OnTimeAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSaldonSalary", DbType="Bit NOT NULL")]
		public bool TimeSaldonSalary
		{
			get
			{
				return this._TimeSaldonSalary;
			}
			set
			{
				if ((this._TimeSaldonSalary != value))
				{
					this.OnTimeSaldonSalaryChanging(value);
					this.SendPropertyChanging();
					this._TimeSaldonSalary = value;
					this.SendPropertyChanged("TimeSaldonSalary");
					this.OnTimeSaldonSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustedSalaryId", DbType="Int")]
		public System.Nullable<int> AdjustedSalaryId
		{
			get
			{
				return this._AdjustedSalaryId;
			}
			set
			{
				if ((this._AdjustedSalaryId != value))
				{
					this.OnAdjustedSalaryIdChanging(value);
					this.SendPropertyChanging();
					this._AdjustedSalaryId = value;
					this.SendPropertyChanged("AdjustedSalaryId");
					this.OnAdjustedSalaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TmpTimeSaldon", DbType="Bit NOT NULL")]
		public bool TmpTimeSaldon
		{
			get
			{
				return this._TmpTimeSaldon;
			}
			set
			{
				if ((this._TmpTimeSaldon != value))
				{
					this.OnTmpTimeSaldonChanging(value);
					this.SendPropertyChanging();
					this._TmpTimeSaldon = value;
					this.SendPropertyChanged("TmpTimeSaldon");
					this.OnTmpTimeSaldonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentTotalPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> AdjustmentTotalPrice
		{
			get
			{
				return this._AdjustmentTotalPrice;
			}
			set
			{
				if ((this._AdjustmentTotalPrice != value))
				{
					this.OnAdjustmentTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentTotalPrice = value;
					this.SendPropertyChanged("AdjustmentTotalPrice");
					this.OnAdjustmentTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckInOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckInOut
		{
			get
			{
				return this._LastCheckInOut;
			}
			set
			{
				if ((this._LastCheckInOut != value))
				{
					this.OnLastCheckInOutChanging(value);
					this.SendPropertyChanging();
					this._LastCheckInOut = value;
					this.SendPropertyChanged("LastCheckInOut");
					this.OnLastCheckInOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectInvoiceSettingRowId", DbType="Int")]
		public System.Nullable<int> ProjectInvoiceSettingRowId
		{
			get
			{
				return this._ProjectInvoiceSettingRowId;
			}
			set
			{
				if ((this._ProjectInvoiceSettingRowId != value))
				{
					this.OnProjectInvoiceSettingRowIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectInvoiceSettingRowId = value;
					this.SendPropertyChanged("ProjectInvoiceSettingRowId");
					this.OnProjectInvoiceSettingRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerInvoiceSettingRowId", DbType="Int")]
		public System.Nullable<int> CustomerInvoiceSettingRowId
		{
			get
			{
				return this._CustomerInvoiceSettingRowId;
			}
			set
			{
				if ((this._CustomerInvoiceSettingRowId != value))
				{
					this.OnCustomerInvoiceSettingRowIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerInvoiceSettingRowId = value;
					this.SendPropertyChanged("CustomerInvoiceSettingRowId");
					this.OnCustomerInvoiceSettingRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeReportGuid", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string TimeReportGuid
		{
			get
			{
				return this._TimeReportGuid;
			}
			set
			{
				if ((this._TimeReportGuid != value))
				{
					this.OnTimeReportGuidChanging(value);
					this.SendPropertyChanging();
					this._TimeReportGuid = value;
					this.SendPropertyChanged("TimeReportGuid");
					this.OnTimeReportGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeCode_TimeReport", Storage="_TimeCode", ThisKey="TimeCodeId", OtherKey="TimeCodeId", IsForeignKey=true)]
		public TimeCode TimeCode
		{
			get
			{
				return this._TimeCode.Entity;
			}
			set
			{
				TimeCode previousValue = this._TimeCode.Entity;
				if (((previousValue != value) 
							|| (this._TimeCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeCode.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._TimeCode.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._TimeCodeId = value.TimeCodeId;
					}
					else
					{
						this._TimeCodeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TimeCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_TimeReport", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_TimeReport", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookResultUnit_TimeReport", Storage="_BookResultUnit", ThisKey="BookResultUnitId", OtherKey="BookResultUnitId", IsForeignKey=true)]
		public BookResultUnit BookResultUnit
		{
			get
			{
				return this._BookResultUnit.Entity;
			}
			set
			{
				BookResultUnit previousValue = this._BookResultUnit.Entity;
				if (((previousValue != value) 
							|| (this._BookResultUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookResultUnit.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._BookResultUnit.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._BookResultUnitId = value.BookResultUnitId;
					}
					else
					{
						this._BookResultUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookResultUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_TimeReport", Storage="_Activity", ThisKey="ActivityId", OtherKey="ActivityId", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._ActivityId = value.ActivityId;
					}
					else
					{
						this._ActivityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TimeReport", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_TimeReport", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.TimeReports.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.TimeReports.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeCode")]
	public partial class TimeCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimeCodeId;
		
		private string _TimeCodeName;
		
		private string _Code;
		
		private System.Nullable<int> _AbsenceType;
		
		private System.Nullable<int> _SalaryTypeId;
		
		private System.Nullable<int> _SalaryTypeHourlyWageId;
		
		private System.Nullable<int> _SalaryTypeMonthlyWageId;
		
		private System.Nullable<decimal> _ConversionFactorTime;
		
		private System.Nullable<decimal> _ConversionFactorCalcPrice;
		
		private System.Nullable<decimal> _ConversionFactorPrice;
		
		private bool _Deletable;
		
		private bool _Active;
		
		private bool _FlextimeADay;
		
		private int _SalaryExportUnitType;
		
		private int _SalaryExportDateType;
		
		private bool _RegularWorkingTime;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeCodeIdChanging(int value);
    partial void OnTimeCodeIdChanged();
    partial void OnTimeCodeNameChanging(string value);
    partial void OnTimeCodeNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAbsenceTypeChanging(System.Nullable<int> value);
    partial void OnAbsenceTypeChanged();
    partial void OnSalaryTypeIdChanging(System.Nullable<int> value);
    partial void OnSalaryTypeIdChanged();
    partial void OnSalaryTypeHourlyWageIdChanging(System.Nullable<int> value);
    partial void OnSalaryTypeHourlyWageIdChanged();
    partial void OnSalaryTypeMonthlyWageIdChanging(System.Nullable<int> value);
    partial void OnSalaryTypeMonthlyWageIdChanged();
    partial void OnConversionFactorTimeChanging(System.Nullable<decimal> value);
    partial void OnConversionFactorTimeChanged();
    partial void OnConversionFactorCalcPriceChanging(System.Nullable<decimal> value);
    partial void OnConversionFactorCalcPriceChanged();
    partial void OnConversionFactorPriceChanging(System.Nullable<decimal> value);
    partial void OnConversionFactorPriceChanged();
    partial void OnDeletableChanging(bool value);
    partial void OnDeletableChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnFlextimeADayChanging(bool value);
    partial void OnFlextimeADayChanged();
    partial void OnSalaryExportUnitTypeChanging(int value);
    partial void OnSalaryExportUnitTypeChanged();
    partial void OnSalaryExportDateTypeChanging(int value);
    partial void OnSalaryExportDateTypeChanged();
    partial void OnRegularWorkingTimeChanging(bool value);
    partial void OnRegularWorkingTimeChanged();
    #endregion
		
		public TimeCode()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCodeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TimeCodeId
		{
			get
			{
				return this._TimeCodeId;
			}
			set
			{
				if ((this._TimeCodeId != value))
				{
					this.OnTimeCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TimeCodeId = value;
					this.SendPropertyChanged("TimeCodeId");
					this.OnTimeCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCodeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TimeCodeName
		{
			get
			{
				return this._TimeCodeName;
			}
			set
			{
				if ((this._TimeCodeName != value))
				{
					this.OnTimeCodeNameChanging(value);
					this.SendPropertyChanging();
					this._TimeCodeName = value;
					this.SendPropertyChanged("TimeCodeName");
					this.OnTimeCodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbsenceType", DbType="Int")]
		public System.Nullable<int> AbsenceType
		{
			get
			{
				return this._AbsenceType;
			}
			set
			{
				if ((this._AbsenceType != value))
				{
					this.OnAbsenceTypeChanging(value);
					this.SendPropertyChanging();
					this._AbsenceType = value;
					this.SendPropertyChanged("AbsenceType");
					this.OnAbsenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryTypeId", DbType="Int")]
		public System.Nullable<int> SalaryTypeId
		{
			get
			{
				return this._SalaryTypeId;
			}
			set
			{
				if ((this._SalaryTypeId != value))
				{
					this.OnSalaryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SalaryTypeId = value;
					this.SendPropertyChanged("SalaryTypeId");
					this.OnSalaryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryTypeHourlyWageId", DbType="Int")]
		public System.Nullable<int> SalaryTypeHourlyWageId
		{
			get
			{
				return this._SalaryTypeHourlyWageId;
			}
			set
			{
				if ((this._SalaryTypeHourlyWageId != value))
				{
					this.OnSalaryTypeHourlyWageIdChanging(value);
					this.SendPropertyChanging();
					this._SalaryTypeHourlyWageId = value;
					this.SendPropertyChanged("SalaryTypeHourlyWageId");
					this.OnSalaryTypeHourlyWageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryTypeMonthlyWageId", DbType="Int")]
		public System.Nullable<int> SalaryTypeMonthlyWageId
		{
			get
			{
				return this._SalaryTypeMonthlyWageId;
			}
			set
			{
				if ((this._SalaryTypeMonthlyWageId != value))
				{
					this.OnSalaryTypeMonthlyWageIdChanging(value);
					this.SendPropertyChanging();
					this._SalaryTypeMonthlyWageId = value;
					this.SendPropertyChanged("SalaryTypeMonthlyWageId");
					this.OnSalaryTypeMonthlyWageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionFactorTime", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> ConversionFactorTime
		{
			get
			{
				return this._ConversionFactorTime;
			}
			set
			{
				if ((this._ConversionFactorTime != value))
				{
					this.OnConversionFactorTimeChanging(value);
					this.SendPropertyChanging();
					this._ConversionFactorTime = value;
					this.SendPropertyChanged("ConversionFactorTime");
					this.OnConversionFactorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionFactorCalcPrice", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> ConversionFactorCalcPrice
		{
			get
			{
				return this._ConversionFactorCalcPrice;
			}
			set
			{
				if ((this._ConversionFactorCalcPrice != value))
				{
					this.OnConversionFactorCalcPriceChanging(value);
					this.SendPropertyChanging();
					this._ConversionFactorCalcPrice = value;
					this.SendPropertyChanged("ConversionFactorCalcPrice");
					this.OnConversionFactorCalcPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionFactorPrice", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> ConversionFactorPrice
		{
			get
			{
				return this._ConversionFactorPrice;
			}
			set
			{
				if ((this._ConversionFactorPrice != value))
				{
					this.OnConversionFactorPriceChanging(value);
					this.SendPropertyChanging();
					this._ConversionFactorPrice = value;
					this.SendPropertyChanged("ConversionFactorPrice");
					this.OnConversionFactorPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deletable", DbType="Bit NOT NULL")]
		public bool Deletable
		{
			get
			{
				return this._Deletable;
			}
			set
			{
				if ((this._Deletable != value))
				{
					this.OnDeletableChanging(value);
					this.SendPropertyChanging();
					this._Deletable = value;
					this.SendPropertyChanged("Deletable");
					this.OnDeletableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlextimeADay", DbType="Bit NOT NULL")]
		public bool FlextimeADay
		{
			get
			{
				return this._FlextimeADay;
			}
			set
			{
				if ((this._FlextimeADay != value))
				{
					this.OnFlextimeADayChanging(value);
					this.SendPropertyChanging();
					this._FlextimeADay = value;
					this.SendPropertyChanged("FlextimeADay");
					this.OnFlextimeADayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryExportUnitType", DbType="Int NOT NULL")]
		public int SalaryExportUnitType
		{
			get
			{
				return this._SalaryExportUnitType;
			}
			set
			{
				if ((this._SalaryExportUnitType != value))
				{
					this.OnSalaryExportUnitTypeChanging(value);
					this.SendPropertyChanging();
					this._SalaryExportUnitType = value;
					this.SendPropertyChanged("SalaryExportUnitType");
					this.OnSalaryExportUnitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryExportDateType", DbType="Int NOT NULL")]
		public int SalaryExportDateType
		{
			get
			{
				return this._SalaryExportDateType;
			}
			set
			{
				if ((this._SalaryExportDateType != value))
				{
					this.OnSalaryExportDateTypeChanging(value);
					this.SendPropertyChanging();
					this._SalaryExportDateType = value;
					this.SendPropertyChanged("SalaryExportDateType");
					this.OnSalaryExportDateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularWorkingTime", DbType="Bit NOT NULL")]
		public bool RegularWorkingTime
		{
			get
			{
				return this._RegularWorkingTime;
			}
			set
			{
				if ((this._RegularWorkingTime != value))
				{
					this.OnRegularWorkingTimeChanging(value);
					this.SendPropertyChanging();
					this._RegularWorkingTime = value;
					this.SendPropertyChanged("RegularWorkingTime");
					this.OnRegularWorkingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeCode_TimeReport", Storage="_TimeReports", ThisKey="TimeCodeId", OtherKey="TimeCodeId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeCode_Activity", Storage="_Activities", ThisKey="TimeCodeId", OtherKey="TimeCodeId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.TimeCode = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.TimeCode = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.TimeCode = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.TimeCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleId;
		
		private string _ScheduleName;
		
		private System.DateTime _StartDate;
		
		private int _NoOfWeeks;
		
		private System.Nullable<decimal> _WorkingHoursFullTime;
		
		private System.Nullable<decimal> _WorkingProc;
		
		private bool _ConsiderNonWorkingDays;
		
		private EntitySet<ProgramUserSchedule> _ProgramUserSchedules;
		
		private EntitySet<ScheduleRow> _ScheduleRows;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    partial void OnScheduleNameChanging(string value);
    partial void OnScheduleNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnNoOfWeeksChanging(int value);
    partial void OnNoOfWeeksChanged();
    partial void OnWorkingHoursFullTimeChanging(System.Nullable<decimal> value);
    partial void OnWorkingHoursFullTimeChanged();
    partial void OnWorkingProcChanging(System.Nullable<decimal> value);
    partial void OnWorkingProcChanged();
    partial void OnConsiderNonWorkingDaysChanging(bool value);
    partial void OnConsiderNonWorkingDaysChanged();
    #endregion
		
		public Schedule()
		{
			this._ProgramUserSchedules = new EntitySet<ProgramUserSchedule>(new Action<ProgramUserSchedule>(this.attach_ProgramUserSchedules), new Action<ProgramUserSchedule>(this.detach_ProgramUserSchedules));
			this._ScheduleRows = new EntitySet<ScheduleRow>(new Action<ScheduleRow>(this.attach_ScheduleRows), new Action<ScheduleRow>(this.detach_ScheduleRows));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ScheduleName
		{
			get
			{
				return this._ScheduleName;
			}
			set
			{
				if ((this._ScheduleName != value))
				{
					this.OnScheduleNameChanging(value);
					this.SendPropertyChanging();
					this._ScheduleName = value;
					this.SendPropertyChanged("ScheduleName");
					this.OnScheduleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfWeeks", DbType="Int NOT NULL")]
		public int NoOfWeeks
		{
			get
			{
				return this._NoOfWeeks;
			}
			set
			{
				if ((this._NoOfWeeks != value))
				{
					this.OnNoOfWeeksChanging(value);
					this.SendPropertyChanging();
					this._NoOfWeeks = value;
					this.SendPropertyChanged("NoOfWeeks");
					this.OnNoOfWeeksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHoursFullTime", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> WorkingHoursFullTime
		{
			get
			{
				return this._WorkingHoursFullTime;
			}
			set
			{
				if ((this._WorkingHoursFullTime != value))
				{
					this.OnWorkingHoursFullTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkingHoursFullTime = value;
					this.SendPropertyChanged("WorkingHoursFullTime");
					this.OnWorkingHoursFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingProc", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> WorkingProc
		{
			get
			{
				return this._WorkingProc;
			}
			set
			{
				if ((this._WorkingProc != value))
				{
					this.OnWorkingProcChanging(value);
					this.SendPropertyChanging();
					this._WorkingProc = value;
					this.SendPropertyChanged("WorkingProc");
					this.OnWorkingProcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsiderNonWorkingDays", DbType="Bit NOT NULL")]
		public bool ConsiderNonWorkingDays
		{
			get
			{
				return this._ConsiderNonWorkingDays;
			}
			set
			{
				if ((this._ConsiderNonWorkingDays != value))
				{
					this.OnConsiderNonWorkingDaysChanging(value);
					this.SendPropertyChanging();
					this._ConsiderNonWorkingDays = value;
					this.SendPropertyChanged("ConsiderNonWorkingDays");
					this.OnConsiderNonWorkingDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ProgramUserSchedule", Storage="_ProgramUserSchedules", ThisKey="ScheduleId", OtherKey="ScheduleId")]
		public EntitySet<ProgramUserSchedule> ProgramUserSchedules
		{
			get
			{
				return this._ProgramUserSchedules;
			}
			set
			{
				this._ProgramUserSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleRow", Storage="_ScheduleRows", ThisKey="ScheduleId", OtherKey="ScheduleId")]
		public EntitySet<ScheduleRow> ScheduleRows
		{
			get
			{
				return this._ScheduleRows;
			}
			set
			{
				this._ScheduleRows.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramUserSchedules(ProgramUserSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ProgramUserSchedules(ProgramUserSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
		
		private void attach_ScheduleRows(ScheduleRow entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = this;
		}
		
		private void detach_ScheduleRows(ScheduleRow entity)
		{
			this.SendPropertyChanging();
			entity.Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectId;
		
		private int _ProjectHdrId;
		
		private int _CustomerId;
		
		private int _ProgramUserId;
		
		private System.DateTime _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _ProgramUserSelection;
		
		private System.Nullable<int> _TypeOfInvoice;
		
		private bool _Active;
		
		private System.Nullable<int> _StdPriceListId;
		
		private System.Nullable<int> _ProjectPriceListId;
		
		private int _KindOfPricing;
		
		private System.Nullable<decimal> _HourlyPrice;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _FixedProjectPrice;
		
		private System.Nullable<decimal> _MaxProjectPrice;
		
		private bool _MaxPrice;
		
		private bool _TimeRegActivity;
		
		private string _Comment;
		
		private System.Nullable<decimal> _NoOfHours;
		
		private System.Nullable<decimal> _CalcPrice;
		
		private bool _UseAverageCalcPrice;
		
		private System.Nullable<decimal> _AverageCalcPrice;
		
		private string _CustomerOrderNo;
		
		private bool _AConto;
		
		private string _InvoiceNote;
		
		private bool _UseCalcSellingPrice;
		
		private System.Nullable<decimal> _CalcSellingPrice;
		
		private System.Nullable<decimal> _CalcIncome;
		
		private System.Nullable<decimal> _CalcResultat;
		
		private System.Nullable<decimal> _CalcPriceOutlay;
		
		private System.Nullable<decimal> _CalcIncomeOutlay;
		
		private System.Nullable<decimal> _CalcResultatTot;
		
		private string _Reference;
		
		private bool _Transference;
		
		private int _TypeOfInvoiceing;
		
		private System.Nullable<decimal> _MaxAmount;
		
		private bool _MaxAmountInclOutlay;
		
		private System.Nullable<int> _ProjectCategoryId;
		
		private bool _InvoiceRegOutlay;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<Participant> _Participants;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<InvoiceSettingRowDetail> _InvoiceSettingRowDetails;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
		private EntityRef<PriceList> _PriceList;
		
		private EntityRef<PriceList> _PriceList1;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<ProjectCategory> _ProjectCategory;
		
		private EntityRef<ProjectHdr> _ProjectHdr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnProjectHdrIdChanging(int value);
    partial void OnProjectHdrIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnProgramUserIdChanging(int value);
    partial void OnProgramUserIdChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnProgramUserSelectionChanging(bool value);
    partial void OnProgramUserSelectionChanged();
    partial void OnTypeOfInvoiceChanging(System.Nullable<int> value);
    partial void OnTypeOfInvoiceChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnStdPriceListIdChanging(System.Nullable<int> value);
    partial void OnStdPriceListIdChanged();
    partial void OnProjectPriceListIdChanging(System.Nullable<int> value);
    partial void OnProjectPriceListIdChanged();
    partial void OnKindOfPricingChanging(int value);
    partial void OnKindOfPricingChanged();
    partial void OnHourlyPriceChanging(System.Nullable<decimal> value);
    partial void OnHourlyPriceChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnFixedProjectPriceChanging(System.Nullable<decimal> value);
    partial void OnFixedProjectPriceChanged();
    partial void OnMaxProjectPriceChanging(System.Nullable<decimal> value);
    partial void OnMaxProjectPriceChanged();
    partial void OnMaxPriceChanging(bool value);
    partial void OnMaxPriceChanged();
    partial void OnTimeRegActivityChanging(bool value);
    partial void OnTimeRegActivityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNoOfHoursChanging(System.Nullable<decimal> value);
    partial void OnNoOfHoursChanged();
    partial void OnCalcPriceChanging(System.Nullable<decimal> value);
    partial void OnCalcPriceChanged();
    partial void OnUseAverageCalcPriceChanging(bool value);
    partial void OnUseAverageCalcPriceChanged();
    partial void OnAverageCalcPriceChanging(System.Nullable<decimal> value);
    partial void OnAverageCalcPriceChanged();
    partial void OnCustomerOrderNoChanging(string value);
    partial void OnCustomerOrderNoChanged();
    partial void OnAContoChanging(bool value);
    partial void OnAContoChanged();
    partial void OnInvoiceNoteChanging(string value);
    partial void OnInvoiceNoteChanged();
    partial void OnUseCalcSellingPriceChanging(bool value);
    partial void OnUseCalcSellingPriceChanged();
    partial void OnCalcSellingPriceChanging(System.Nullable<decimal> value);
    partial void OnCalcSellingPriceChanged();
    partial void OnCalcIncomeChanging(System.Nullable<decimal> value);
    partial void OnCalcIncomeChanged();
    partial void OnCalcResultatChanging(System.Nullable<decimal> value);
    partial void OnCalcResultatChanged();
    partial void OnCalcPriceOutlayChanging(System.Nullable<decimal> value);
    partial void OnCalcPriceOutlayChanged();
    partial void OnCalcIncomeOutlayChanging(System.Nullable<decimal> value);
    partial void OnCalcIncomeOutlayChanged();
    partial void OnCalcResultatTotChanging(System.Nullable<decimal> value);
    partial void OnCalcResultatTotChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnTransferenceChanging(bool value);
    partial void OnTransferenceChanged();
    partial void OnTypeOfInvoiceingChanging(int value);
    partial void OnTypeOfInvoiceingChanged();
    partial void OnMaxAmountChanging(System.Nullable<decimal> value);
    partial void OnMaxAmountChanged();
    partial void OnMaxAmountInclOutlayChanging(bool value);
    partial void OnMaxAmountInclOutlayChanged();
    partial void OnProjectCategoryIdChanging(System.Nullable<int> value);
    partial void OnProjectCategoryIdChanged();
    partial void OnInvoiceRegOutlayChanging(bool value);
    partial void OnInvoiceRegOutlayChanged();
    #endregion
		
		public Project()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._Participants = new EntitySet<Participant>(new Action<Participant>(this.attach_Participants), new Action<Participant>(this.detach_Participants));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._InvoiceSettingRowDetails = new EntitySet<InvoiceSettingRowDetail>(new Action<InvoiceSettingRowDetail>(this.attach_InvoiceSettingRowDetails), new Action<InvoiceSettingRowDetail>(this.detach_InvoiceSettingRowDetails));
			this._ProgramUser = default(EntityRef<ProgramUser>);
			this._PriceList = default(EntityRef<PriceList>);
			this._PriceList1 = default(EntityRef<PriceList>);
			this._Customer = default(EntityRef<Customer>);
			this._ProjectCategory = default(EntityRef<ProjectCategory>);
			this._ProjectHdr = default(EntityRef<ProjectHdr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectHdrId", DbType="Int NOT NULL")]
		public int ProjectHdrId
		{
			get
			{
				return this._ProjectHdrId;
			}
			set
			{
				if ((this._ProjectHdrId != value))
				{
					if (this._ProjectHdr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectHdrIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectHdrId = value;
					this.SendPropertyChanged("ProjectHdrId");
					this.OnProjectHdrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int NOT NULL")]
		public int ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserSelection", DbType="Bit NOT NULL")]
		public bool ProgramUserSelection
		{
			get
			{
				return this._ProgramUserSelection;
			}
			set
			{
				if ((this._ProgramUserSelection != value))
				{
					this.OnProgramUserSelectionChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserSelection = value;
					this.SendPropertyChanged("ProgramUserSelection");
					this.OnProgramUserSelectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvoice", DbType="Int")]
		public System.Nullable<int> TypeOfInvoice
		{
			get
			{
				return this._TypeOfInvoice;
			}
			set
			{
				if ((this._TypeOfInvoice != value))
				{
					this.OnTypeOfInvoiceChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvoice = value;
					this.SendPropertyChanged("TypeOfInvoice");
					this.OnTypeOfInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdPriceListId", DbType="Int")]
		public System.Nullable<int> StdPriceListId
		{
			get
			{
				return this._StdPriceListId;
			}
			set
			{
				if ((this._StdPriceListId != value))
				{
					if (this._PriceList1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStdPriceListIdChanging(value);
					this.SendPropertyChanging();
					this._StdPriceListId = value;
					this.SendPropertyChanged("StdPriceListId");
					this.OnStdPriceListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPriceListId", DbType="Int")]
		public System.Nullable<int> ProjectPriceListId
		{
			get
			{
				return this._ProjectPriceListId;
			}
			set
			{
				if ((this._ProjectPriceListId != value))
				{
					if (this._PriceList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectPriceListIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectPriceListId = value;
					this.SendPropertyChanged("ProjectPriceListId");
					this.OnProjectPriceListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindOfPricing", DbType="Int NOT NULL")]
		public int KindOfPricing
		{
			get
			{
				return this._KindOfPricing;
			}
			set
			{
				if ((this._KindOfPricing != value))
				{
					this.OnKindOfPricingChanging(value);
					this.SendPropertyChanging();
					this._KindOfPricing = value;
					this.SendPropertyChanged("KindOfPricing");
					this.OnKindOfPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourlyPrice
		{
			get
			{
				return this._HourlyPrice;
			}
			set
			{
				if ((this._HourlyPrice != value))
				{
					this.OnHourlyPriceChanging(value);
					this.SendPropertyChanging();
					this._HourlyPrice = value;
					this.SendPropertyChanged("HourlyPrice");
					this.OnHourlyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedProjectPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> FixedProjectPrice
		{
			get
			{
				return this._FixedProjectPrice;
			}
			set
			{
				if ((this._FixedProjectPrice != value))
				{
					this.OnFixedProjectPriceChanging(value);
					this.SendPropertyChanging();
					this._FixedProjectPrice = value;
					this.SendPropertyChanged("FixedProjectPrice");
					this.OnFixedProjectPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxProjectPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> MaxProjectPrice
		{
			get
			{
				return this._MaxProjectPrice;
			}
			set
			{
				if ((this._MaxProjectPrice != value))
				{
					this.OnMaxProjectPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxProjectPrice = value;
					this.SendPropertyChanged("MaxProjectPrice");
					this.OnMaxProjectPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Bit NOT NULL")]
		public bool MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeRegActivity", DbType="Bit NOT NULL")]
		public bool TimeRegActivity
		{
			get
			{
				return this._TimeRegActivity;
			}
			set
			{
				if ((this._TimeRegActivity != value))
				{
					this.OnTimeRegActivityChanging(value);
					this.SendPropertyChanging();
					this._TimeRegActivity = value;
					this.SendPropertyChanged("TimeRegActivity");
					this.OnTimeRegActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfHours", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> NoOfHours
		{
			get
			{
				return this._NoOfHours;
			}
			set
			{
				if ((this._NoOfHours != value))
				{
					this.OnNoOfHoursChanging(value);
					this.SendPropertyChanging();
					this._NoOfHours = value;
					this.SendPropertyChanged("NoOfHours");
					this.OnNoOfHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcPrice
		{
			get
			{
				return this._CalcPrice;
			}
			set
			{
				if ((this._CalcPrice != value))
				{
					this.OnCalcPriceChanging(value);
					this.SendPropertyChanging();
					this._CalcPrice = value;
					this.SendPropertyChanged("CalcPrice");
					this.OnCalcPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseAverageCalcPrice", DbType="Bit NOT NULL")]
		public bool UseAverageCalcPrice
		{
			get
			{
				return this._UseAverageCalcPrice;
			}
			set
			{
				if ((this._UseAverageCalcPrice != value))
				{
					this.OnUseAverageCalcPriceChanging(value);
					this.SendPropertyChanging();
					this._UseAverageCalcPrice = value;
					this.SendPropertyChanged("UseAverageCalcPrice");
					this.OnUseAverageCalcPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageCalcPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> AverageCalcPrice
		{
			get
			{
				return this._AverageCalcPrice;
			}
			set
			{
				if ((this._AverageCalcPrice != value))
				{
					this.OnAverageCalcPriceChanging(value);
					this.SendPropertyChanging();
					this._AverageCalcPrice = value;
					this.SendPropertyChanged("AverageCalcPrice");
					this.OnAverageCalcPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOrderNo", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CustomerOrderNo
		{
			get
			{
				return this._CustomerOrderNo;
			}
			set
			{
				if ((this._CustomerOrderNo != value))
				{
					this.OnCustomerOrderNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerOrderNo = value;
					this.SendPropertyChanged("CustomerOrderNo");
					this.OnCustomerOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AConto", DbType="Bit NOT NULL")]
		public bool AConto
		{
			get
			{
				return this._AConto;
			}
			set
			{
				if ((this._AConto != value))
				{
					this.OnAContoChanging(value);
					this.SendPropertyChanging();
					this._AConto = value;
					this.SendPropertyChanged("AConto");
					this.OnAContoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNote", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string InvoiceNote
		{
			get
			{
				return this._InvoiceNote;
			}
			set
			{
				if ((this._InvoiceNote != value))
				{
					this.OnInvoiceNoteChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNote = value;
					this.SendPropertyChanged("InvoiceNote");
					this.OnInvoiceNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseCalcSellingPrice", DbType="Bit NOT NULL")]
		public bool UseCalcSellingPrice
		{
			get
			{
				return this._UseCalcSellingPrice;
			}
			set
			{
				if ((this._UseCalcSellingPrice != value))
				{
					this.OnUseCalcSellingPriceChanging(value);
					this.SendPropertyChanging();
					this._UseCalcSellingPrice = value;
					this.SendPropertyChanged("UseCalcSellingPrice");
					this.OnUseCalcSellingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcSellingPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcSellingPrice
		{
			get
			{
				return this._CalcSellingPrice;
			}
			set
			{
				if ((this._CalcSellingPrice != value))
				{
					this.OnCalcSellingPriceChanging(value);
					this.SendPropertyChanging();
					this._CalcSellingPrice = value;
					this.SendPropertyChanged("CalcSellingPrice");
					this.OnCalcSellingPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcIncome", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcIncome
		{
			get
			{
				return this._CalcIncome;
			}
			set
			{
				if ((this._CalcIncome != value))
				{
					this.OnCalcIncomeChanging(value);
					this.SendPropertyChanging();
					this._CalcIncome = value;
					this.SendPropertyChanged("CalcIncome");
					this.OnCalcIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcResultat", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcResultat
		{
			get
			{
				return this._CalcResultat;
			}
			set
			{
				if ((this._CalcResultat != value))
				{
					this.OnCalcResultatChanging(value);
					this.SendPropertyChanging();
					this._CalcResultat = value;
					this.SendPropertyChanged("CalcResultat");
					this.OnCalcResultatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPriceOutlay", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcPriceOutlay
		{
			get
			{
				return this._CalcPriceOutlay;
			}
			set
			{
				if ((this._CalcPriceOutlay != value))
				{
					this.OnCalcPriceOutlayChanging(value);
					this.SendPropertyChanging();
					this._CalcPriceOutlay = value;
					this.SendPropertyChanged("CalcPriceOutlay");
					this.OnCalcPriceOutlayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcIncomeOutlay", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcIncomeOutlay
		{
			get
			{
				return this._CalcIncomeOutlay;
			}
			set
			{
				if ((this._CalcIncomeOutlay != value))
				{
					this.OnCalcIncomeOutlayChanging(value);
					this.SendPropertyChanging();
					this._CalcIncomeOutlay = value;
					this.SendPropertyChanged("CalcIncomeOutlay");
					this.OnCalcIncomeOutlayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcResultatTot", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcResultatTot
		{
			get
			{
				return this._CalcResultatTot;
			}
			set
			{
				if ((this._CalcResultatTot != value))
				{
					this.OnCalcResultatTotChanging(value);
					this.SendPropertyChanging();
					this._CalcResultatTot = value;
					this.SendPropertyChanged("CalcResultatTot");
					this.OnCalcResultatTotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transference", DbType="Bit NOT NULL")]
		public bool Transference
		{
			get
			{
				return this._Transference;
			}
			set
			{
				if ((this._Transference != value))
				{
					this.OnTransferenceChanging(value);
					this.SendPropertyChanging();
					this._Transference = value;
					this.SendPropertyChanged("Transference");
					this.OnTransferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvoiceing", DbType="Int NOT NULL")]
		public int TypeOfInvoiceing
		{
			get
			{
				return this._TypeOfInvoiceing;
			}
			set
			{
				if ((this._TypeOfInvoiceing != value))
				{
					this.OnTypeOfInvoiceingChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvoiceing = value;
					this.SendPropertyChanged("TypeOfInvoiceing");
					this.OnTypeOfInvoiceingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> MaxAmount
		{
			get
			{
				return this._MaxAmount;
			}
			set
			{
				if ((this._MaxAmount != value))
				{
					this.OnMaxAmountChanging(value);
					this.SendPropertyChanging();
					this._MaxAmount = value;
					this.SendPropertyChanged("MaxAmount");
					this.OnMaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAmountInclOutlay", DbType="Bit NOT NULL")]
		public bool MaxAmountInclOutlay
		{
			get
			{
				return this._MaxAmountInclOutlay;
			}
			set
			{
				if ((this._MaxAmountInclOutlay != value))
				{
					this.OnMaxAmountInclOutlayChanging(value);
					this.SendPropertyChanging();
					this._MaxAmountInclOutlay = value;
					this.SendPropertyChanged("MaxAmountInclOutlay");
					this.OnMaxAmountInclOutlayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCategoryId", DbType="Int")]
		public System.Nullable<int> ProjectCategoryId
		{
			get
			{
				return this._ProjectCategoryId;
			}
			set
			{
				if ((this._ProjectCategoryId != value))
				{
					if (this._ProjectCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectCategoryId = value;
					this.SendPropertyChanged("ProjectCategoryId");
					this.OnProjectCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceRegOutlay", DbType="Bit NOT NULL")]
		public bool InvoiceRegOutlay
		{
			get
			{
				return this._InvoiceRegOutlay;
			}
			set
			{
				if ((this._InvoiceRegOutlay != value))
				{
					this.OnInvoiceRegOutlayChanging(value);
					this.SendPropertyChanging();
					this._InvoiceRegOutlay = value;
					this.SendPropertyChanged("InvoiceRegOutlay");
					this.OnInvoiceRegOutlayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_TimeReport", Storage="_TimeReports", ThisKey="ProjectId", OtherKey="ProjectId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Participant", Storage="_Participants", ThisKey="ProjectId", OtherKey="ProjectId")]
		public EntitySet<Participant> Participants
		{
			get
			{
				return this._Participants;
			}
			set
			{
				this._Participants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Activity", Storage="_Activities", ThisKey="ProjectId", OtherKey="ProjectId")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_InvoiceSettingRowDetail", Storage="_InvoiceSettingRowDetails", ThisKey="ProjectId", OtherKey="ProjectId")]
		public EntitySet<InvoiceSettingRowDetail> InvoiceSettingRowDetails
		{
			get
			{
				return this._InvoiceSettingRowDetails;
			}
			set
			{
				this._InvoiceSettingRowDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Project", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(int);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_Project", Storage="_PriceList", ThisKey="ProjectPriceListId", OtherKey="PriceListId", IsForeignKey=true)]
		public PriceList PriceList
		{
			get
			{
				return this._PriceList.Entity;
			}
			set
			{
				PriceList previousValue = this._PriceList.Entity;
				if (((previousValue != value) 
							|| (this._PriceList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceList.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._PriceList.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectPriceListId = value.PriceListId;
					}
					else
					{
						this._ProjectPriceListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PriceList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_Project1", Storage="_PriceList1", ThisKey="StdPriceListId", OtherKey="PriceListId", IsForeignKey=true)]
		public PriceList PriceList1
		{
			get
			{
				return this._PriceList1.Entity;
			}
			set
			{
				PriceList previousValue = this._PriceList1.Entity;
				if (((previousValue != value) 
							|| (this._PriceList1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceList1.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._PriceList1.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._StdPriceListId = value.PriceListId;
					}
					else
					{
						this._StdPriceListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PriceList1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Project", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectCategory_Project", Storage="_ProjectCategory", ThisKey="ProjectCategoryId", OtherKey="ProjectCategoryId", IsForeignKey=true)]
		public ProjectCategory ProjectCategory
		{
			get
			{
				return this._ProjectCategory.Entity;
			}
			set
			{
				ProjectCategory previousValue = this._ProjectCategory.Entity;
				if (((previousValue != value) 
							|| (this._ProjectCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectCategory.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProjectCategory.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectCategoryId = value.ProjectCategoryId;
					}
					else
					{
						this._ProjectCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProjectCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectHdr_Project", Storage="_ProjectHdr", ThisKey="ProjectHdrId", OtherKey="ProjectHdrId", IsForeignKey=true)]
		public ProjectHdr ProjectHdr
		{
			get
			{
				return this._ProjectHdr.Entity;
			}
			set
			{
				ProjectHdr previousValue = this._ProjectHdr.Entity;
				if (((previousValue != value) 
							|| (this._ProjectHdr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectHdr.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._ProjectHdr.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._ProjectHdrId = value.ProjectHdrId;
					}
					else
					{
						this._ProjectHdrId = default(int);
					}
					this.SendPropertyChanged("ProjectHdr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_InvoiceSettingRowDetails(InvoiceSettingRowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_InvoiceSettingRowDetails(InvoiceSettingRowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramUser")]
	public partial class ProgramUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Signature;
		
		private int _ProgramUserId;
		
		private string _WindowsUserName;
		
		private string _PersonalNo;
		
		private string _FirstName;
		
		private string _Name;
		
		private string _EmploymentNo;
		
		private string _Pwd;
		
		private string _Telephone;
		
		private string _MobilePhone;
		
		private string _EmailAddress;
		
		private string _Comment;
		
		private bool _Active;
		
		private bool _HourlyWage;
		
		private bool _EmplCategory;
		
		private System.Nullable<int> _ProgramUserGroupId;
		
		private System.Nullable<int> _RoleId;
		
		private System.Nullable<int> _SalaryResponsible;
		
		private System.Nullable<int> _ResUnitId;
		
		private System.Nullable<System.DateTime> _LastCheckinDate;
		
		private System.Nullable<int> _BookAccountDebitId;
		
		private System.Nullable<int> _BookAccountCreditId;
		
		private bool _CanLogIn;
		
		private string _UserGuid;
		
		private string _WebPwd;
		
		private System.Nullable<System.DateTime> _ModDate;
		
		private bool _WebActive;
		
		private System.Nullable<System.DateTime> _UserEndDate;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<ProgramUserCalcPrice> _ProgramUserCalcPrices;
		
		private EntitySet<ProgramUserSchedule> _ProgramUserSchedules;
		
		private EntitySet<Pricing> _Pricings;
		
		private EntitySet<Participant> _Participants;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<Invoice> _Invoices1;
		
		private EntitySet<Invoice> _Invoices2;
		
		private EntityRef<ProgramUserGroup> _ProgramUserGroup;
		
		private EntityRef<BookResultUnit> _BookResultUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnProgramUserIdChanging(int value);
    partial void OnProgramUserIdChanged();
    partial void OnWindowsUserNameChanging(string value);
    partial void OnWindowsUserNameChanged();
    partial void OnPersonalNoChanging(string value);
    partial void OnPersonalNoChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmploymentNoChanging(string value);
    partial void OnEmploymentNoChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnHourlyWageChanging(bool value);
    partial void OnHourlyWageChanged();
    partial void OnEmplCategoryChanging(bool value);
    partial void OnEmplCategoryChanged();
    partial void OnProgramUserGroupIdChanging(System.Nullable<int> value);
    partial void OnProgramUserGroupIdChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    partial void OnSalaryResponsibleChanging(System.Nullable<int> value);
    partial void OnSalaryResponsibleChanged();
    partial void OnResUnitIdChanging(System.Nullable<int> value);
    partial void OnResUnitIdChanged();
    partial void OnLastCheckinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckinDateChanged();
    partial void OnBookAccountDebitIdChanging(System.Nullable<int> value);
    partial void OnBookAccountDebitIdChanged();
    partial void OnBookAccountCreditIdChanging(System.Nullable<int> value);
    partial void OnBookAccountCreditIdChanged();
    partial void OnCanLogInChanging(bool value);
    partial void OnCanLogInChanged();
    partial void OnUserGuidChanging(string value);
    partial void OnUserGuidChanged();
    partial void OnWebPwdChanging(string value);
    partial void OnWebPwdChanged();
    partial void OnModDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModDateChanged();
    partial void OnWebActiveChanging(bool value);
    partial void OnWebActiveChanged();
    partial void OnUserEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUserEndDateChanged();
    #endregion
		
		public ProgramUser()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._ProgramUserCalcPrices = new EntitySet<ProgramUserCalcPrice>(new Action<ProgramUserCalcPrice>(this.attach_ProgramUserCalcPrices), new Action<ProgramUserCalcPrice>(this.detach_ProgramUserCalcPrices));
			this._ProgramUserSchedules = new EntitySet<ProgramUserSchedule>(new Action<ProgramUserSchedule>(this.attach_ProgramUserSchedules), new Action<ProgramUserSchedule>(this.detach_ProgramUserSchedules));
			this._Pricings = new EntitySet<Pricing>(new Action<Pricing>(this.attach_Pricings), new Action<Pricing>(this.detach_Pricings));
			this._Participants = new EntitySet<Participant>(new Action<Participant>(this.attach_Participants), new Action<Participant>(this.detach_Participants));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Invoices1 = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices1), new Action<Invoice>(this.detach_Invoices1));
			this._Invoices2 = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices2), new Action<Invoice>(this.detach_Invoices2));
			this._ProgramUserGroup = default(EntityRef<ProgramUserGroup>);
			this._BookResultUnit = default(EntityRef<BookResultUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsUserName", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string WindowsUserName
		{
			get
			{
				return this._WindowsUserName;
			}
			set
			{
				if ((this._WindowsUserName != value))
				{
					this.OnWindowsUserNameChanging(value);
					this.SendPropertyChanging();
					this._WindowsUserName = value;
					this.SendPropertyChanged("WindowsUserName");
					this.OnWindowsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PersonalNo
		{
			get
			{
				return this._PersonalNo;
			}
			set
			{
				if ((this._PersonalNo != value))
				{
					this.OnPersonalNoChanging(value);
					this.SendPropertyChanging();
					this._PersonalNo = value;
					this.SendPropertyChanged("PersonalNo");
					this.OnPersonalNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EmploymentNo
		{
			get
			{
				return this._EmploymentNo;
			}
			set
			{
				if ((this._EmploymentNo != value))
				{
					this.OnEmploymentNoChanging(value);
					this.SendPropertyChanging();
					this._EmploymentNo = value;
					this.SendPropertyChanged("EmploymentNo");
					this.OnEmploymentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyWage", DbType="Bit NOT NULL")]
		public bool HourlyWage
		{
			get
			{
				return this._HourlyWage;
			}
			set
			{
				if ((this._HourlyWage != value))
				{
					this.OnHourlyWageChanging(value);
					this.SendPropertyChanging();
					this._HourlyWage = value;
					this.SendPropertyChanged("HourlyWage");
					this.OnHourlyWageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplCategory", DbType="Bit NOT NULL")]
		public bool EmplCategory
		{
			get
			{
				return this._EmplCategory;
			}
			set
			{
				if ((this._EmplCategory != value))
				{
					this.OnEmplCategoryChanging(value);
					this.SendPropertyChanging();
					this._EmplCategory = value;
					this.SendPropertyChanged("EmplCategory");
					this.OnEmplCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserGroupId", DbType="Int")]
		public System.Nullable<int> ProgramUserGroupId
		{
			get
			{
				return this._ProgramUserGroupId;
			}
			set
			{
				if ((this._ProgramUserGroupId != value))
				{
					if (this._ProgramUserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserGroupId = value;
					this.SendPropertyChanged("ProgramUserGroupId");
					this.OnProgramUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryResponsible", DbType="Int")]
		public System.Nullable<int> SalaryResponsible
		{
			get
			{
				return this._SalaryResponsible;
			}
			set
			{
				if ((this._SalaryResponsible != value))
				{
					this.OnSalaryResponsibleChanging(value);
					this.SendPropertyChanging();
					this._SalaryResponsible = value;
					this.SendPropertyChanged("SalaryResponsible");
					this.OnSalaryResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResUnitId", DbType="Int")]
		public System.Nullable<int> ResUnitId
		{
			get
			{
				return this._ResUnitId;
			}
			set
			{
				if ((this._ResUnitId != value))
				{
					if (this._BookResultUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ResUnitId = value;
					this.SendPropertyChanged("ResUnitId");
					this.OnResUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckinDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastCheckinDate
		{
			get
			{
				return this._LastCheckinDate;
			}
			set
			{
				if ((this._LastCheckinDate != value))
				{
					this.OnLastCheckinDateChanging(value);
					this.SendPropertyChanging();
					this._LastCheckinDate = value;
					this.SendPropertyChanged("LastCheckinDate");
					this.OnLastCheckinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAccountDebitId", DbType="Int")]
		public System.Nullable<int> BookAccountDebitId
		{
			get
			{
				return this._BookAccountDebitId;
			}
			set
			{
				if ((this._BookAccountDebitId != value))
				{
					this.OnBookAccountDebitIdChanging(value);
					this.SendPropertyChanging();
					this._BookAccountDebitId = value;
					this.SendPropertyChanged("BookAccountDebitId");
					this.OnBookAccountDebitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAccountCreditId", DbType="Int")]
		public System.Nullable<int> BookAccountCreditId
		{
			get
			{
				return this._BookAccountCreditId;
			}
			set
			{
				if ((this._BookAccountCreditId != value))
				{
					this.OnBookAccountCreditIdChanging(value);
					this.SendPropertyChanging();
					this._BookAccountCreditId = value;
					this.SendPropertyChanged("BookAccountCreditId");
					this.OnBookAccountCreditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLogIn", DbType="Bit NOT NULL")]
		public bool CanLogIn
		{
			get
			{
				return this._CanLogIn;
			}
			set
			{
				if ((this._CanLogIn != value))
				{
					this.OnCanLogInChanging(value);
					this.SendPropertyChanging();
					this._CanLogIn = value;
					this.SendPropertyChanged("CanLogIn");
					this.OnCanLogInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGuid", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string UserGuid
		{
			get
			{
				return this._UserGuid;
			}
			set
			{
				if ((this._UserGuid != value))
				{
					this.OnUserGuidChanging(value);
					this.SendPropertyChanging();
					this._UserGuid = value;
					this.SendPropertyChanged("UserGuid");
					this.OnUserGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPwd", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string WebPwd
		{
			get
			{
				return this._WebPwd;
			}
			set
			{
				if ((this._WebPwd != value))
				{
					this.OnWebPwdChanging(value);
					this.SendPropertyChanging();
					this._WebPwd = value;
					this.SendPropertyChanged("WebPwd");
					this.OnWebPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModDate
		{
			get
			{
				return this._ModDate;
			}
			set
			{
				if ((this._ModDate != value))
				{
					this.OnModDateChanging(value);
					this.SendPropertyChanging();
					this._ModDate = value;
					this.SendPropertyChanged("ModDate");
					this.OnModDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebActive", DbType="Bit NOT NULL")]
		public bool WebActive
		{
			get
			{
				return this._WebActive;
			}
			set
			{
				if ((this._WebActive != value))
				{
					this.OnWebActiveChanging(value);
					this.SendPropertyChanging();
					this._WebActive = value;
					this.SendPropertyChanged("WebActive");
					this.OnWebActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UserEndDate
		{
			get
			{
				return this._UserEndDate;
			}
			set
			{
				if ((this._UserEndDate != value))
				{
					this.OnUserEndDateChanging(value);
					this.SendPropertyChanging();
					this._UserEndDate = value;
					this.SendPropertyChanged("UserEndDate");
					this.OnUserEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_TimeReport", Storage="_TimeReports", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Project", Storage="_Projects", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_ProgramUserCalcPrice", Storage="_ProgramUserCalcPrices", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<ProgramUserCalcPrice> ProgramUserCalcPrices
		{
			get
			{
				return this._ProgramUserCalcPrices;
			}
			set
			{
				this._ProgramUserCalcPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_ProgramUserSchedule", Storage="_ProgramUserSchedules", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<ProgramUserSchedule> ProgramUserSchedules
		{
			get
			{
				return this._ProgramUserSchedules;
			}
			set
			{
				this._ProgramUserSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Pricing", Storage="_Pricings", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<Pricing> Pricings
		{
			get
			{
				return this._Pricings;
			}
			set
			{
				this._Pricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Participant", Storage="_Participants", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<Participant> Participants
		{
			get
			{
				return this._Participants;
			}
			set
			{
				this._Participants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Customer", Storage="_Customers", ThisKey="ProgramUserId", OtherKey="ProgramUserId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Invoice", Storage="_Invoices", ThisKey="ProgramUserId", OtherKey="ApprovedId")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Invoice1", Storage="_Invoices1", ThisKey="ProgramUserId", OtherKey="ExportedId")]
		public EntitySet<Invoice> Invoices1
		{
			get
			{
				return this._Invoices1;
			}
			set
			{
				this._Invoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Invoice2", Storage="_Invoices2", ThisKey="ProgramUserId", OtherKey="ReferenceId")]
		public EntitySet<Invoice> Invoices2
		{
			get
			{
				return this._Invoices2;
			}
			set
			{
				this._Invoices2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUserGroup_ProgramUser", Storage="_ProgramUserGroup", ThisKey="ProgramUserGroupId", OtherKey="ProgramUserGroupId", IsForeignKey=true)]
		public ProgramUserGroup ProgramUserGroup
		{
			get
			{
				return this._ProgramUserGroup.Entity;
			}
			set
			{
				ProgramUserGroup previousValue = this._ProgramUserGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUserGroup.Entity = null;
						previousValue.ProgramUsers.Remove(this);
					}
					this._ProgramUserGroup.Entity = value;
					if ((value != null))
					{
						value.ProgramUsers.Add(this);
						this._ProgramUserGroupId = value.ProgramUserGroupId;
					}
					else
					{
						this._ProgramUserGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUserGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookResultUnit_ProgramUser", Storage="_BookResultUnit", ThisKey="ResUnitId", OtherKey="BookResultUnitId", IsForeignKey=true)]
		public BookResultUnit BookResultUnit
		{
			get
			{
				return this._BookResultUnit.Entity;
			}
			set
			{
				BookResultUnit previousValue = this._BookResultUnit.Entity;
				if (((previousValue != value) 
							|| (this._BookResultUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookResultUnit.Entity = null;
						previousValue.ProgramUsers.Remove(this);
					}
					this._BookResultUnit.Entity = value;
					if ((value != null))
					{
						value.ProgramUsers.Add(this);
						this._ResUnitId = value.BookResultUnitId;
					}
					else
					{
						this._ResUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookResultUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_ProgramUserCalcPrices(ProgramUserCalcPrice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_ProgramUserCalcPrices(ProgramUserCalcPrice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_ProgramUserSchedules(ProgramUserSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_ProgramUserSchedules(ProgramUserSchedule entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser = null;
		}
		
		private void attach_Invoices1(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser1 = this;
		}
		
		private void detach_Invoices1(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser1 = null;
		}
		
		private void attach_Invoices2(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser2 = this;
		}
		
		private void detach_Invoices2(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUser2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramUserCalcPrice")]
	public partial class ProgramUserCalcPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramUserCalcPriceId;
		
		private int _ProgramUserId;
		
		private System.Nullable<decimal> _CalcPrice;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramUserCalcPriceIdChanging(int value);
    partial void OnProgramUserCalcPriceIdChanged();
    partial void OnProgramUserIdChanging(int value);
    partial void OnProgramUserIdChanged();
    partial void OnCalcPriceChanging(System.Nullable<decimal> value);
    partial void OnCalcPriceChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public ProgramUserCalcPrice()
		{
			this._ProgramUser = default(EntityRef<ProgramUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserCalcPriceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramUserCalcPriceId
		{
			get
			{
				return this._ProgramUserCalcPriceId;
			}
			set
			{
				if ((this._ProgramUserCalcPriceId != value))
				{
					this.OnProgramUserCalcPriceIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserCalcPriceId = value;
					this.SendPropertyChanged("ProgramUserCalcPriceId");
					this.OnProgramUserCalcPriceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int NOT NULL")]
		public int ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPrice", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcPrice
		{
			get
			{
				return this._CalcPrice;
			}
			set
			{
				if ((this._CalcPrice != value))
				{
					this.OnCalcPriceChanging(value);
					this.SendPropertyChanging();
					this._CalcPrice = value;
					this.SendPropertyChanged("CalcPrice");
					this.OnCalcPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_ProgramUserCalcPrice", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.ProgramUserCalcPrices.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.ProgramUserCalcPrices.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(int);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramUserGroup")]
	public partial class ProgramUserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramUserGroupId;
		
		private string _ProgramUserGroupName;
		
		private bool _Active;
		
		private EntitySet<ProgramUser> _ProgramUsers;
		
		private EntitySet<Pricing> _Pricings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramUserGroupIdChanging(int value);
    partial void OnProgramUserGroupIdChanged();
    partial void OnProgramUserGroupNameChanging(string value);
    partial void OnProgramUserGroupNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ProgramUserGroup()
		{
			this._ProgramUsers = new EntitySet<ProgramUser>(new Action<ProgramUser>(this.attach_ProgramUsers), new Action<ProgramUser>(this.detach_ProgramUsers));
			this._Pricings = new EntitySet<Pricing>(new Action<Pricing>(this.attach_Pricings), new Action<Pricing>(this.detach_Pricings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramUserGroupId
		{
			get
			{
				return this._ProgramUserGroupId;
			}
			set
			{
				if ((this._ProgramUserGroupId != value))
				{
					this.OnProgramUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserGroupId = value;
					this.SendPropertyChanged("ProgramUserGroupId");
					this.OnProgramUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserGroupName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProgramUserGroupName
		{
			get
			{
				return this._ProgramUserGroupName;
			}
			set
			{
				if ((this._ProgramUserGroupName != value))
				{
					this.OnProgramUserGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserGroupName = value;
					this.SendPropertyChanged("ProgramUserGroupName");
					this.OnProgramUserGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUserGroup_ProgramUser", Storage="_ProgramUsers", ThisKey="ProgramUserGroupId", OtherKey="ProgramUserGroupId")]
		public EntitySet<ProgramUser> ProgramUsers
		{
			get
			{
				return this._ProgramUsers;
			}
			set
			{
				this._ProgramUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUserGroup_Pricing", Storage="_Pricings", ThisKey="ProgramUserGroupId", OtherKey="ProgramUserGroupId")]
		public EntitySet<Pricing> Pricings
		{
			get
			{
				return this._Pricings;
			}
			set
			{
				this._Pricings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramUsers(ProgramUser entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUserGroup = this;
		}
		
		private void detach_ProgramUsers(ProgramUser entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUserGroup = null;
		}
		
		private void attach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUserGroup = this;
		}
		
		private void detach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ProgramUserGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramUserSchedule")]
	public partial class ProgramUserSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramUserScheduleId;
		
		private int _ProgramUserId;
		
		private int _ScheduleId;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramUserScheduleIdChanging(int value);
    partial void OnProgramUserScheduleIdChanged();
    partial void OnProgramUserIdChanging(int value);
    partial void OnProgramUserIdChanged();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public ProgramUserSchedule()
		{
			this._ProgramUser = default(EntityRef<ProgramUser>);
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserScheduleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramUserScheduleId
		{
			get
			{
				return this._ProgramUserScheduleId;
			}
			set
			{
				if ((this._ProgramUserScheduleId != value))
				{
					this.OnProgramUserScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserScheduleId = value;
					this.SendPropertyChanged("ProgramUserScheduleId");
					this.OnProgramUserScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int NOT NULL")]
		public int ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int NOT NULL")]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_ProgramUserSchedule", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.ProgramUserSchedules.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.ProgramUserSchedules.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(int);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ProgramUserSchedule", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="ScheduleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ProgramUserSchedules.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ProgramUserSchedules.Add(this);
						this._ScheduleId = value.ScheduleId;
					}
					else
					{
						this._ScheduleId = default(int);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pricing")]
	public partial class Pricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PricingId;
		
		private int _PriceListPeriodId;
		
		private System.Nullable<int> _ActivityId;
		
		private System.Nullable<int> _ProgramUserId;
		
		private System.Nullable<int> _ProgramUserGroupId;
		
		private System.Nullable<int> _ProjectId;
		
		private System.Nullable<decimal> _Price;
		
		private EntityRef<ProgramUserGroup> _ProgramUserGroup;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
		private EntityRef<PriceListPeriod> _PriceListPeriod;
		
		private EntityRef<Activity> _Activity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPricingIdChanging(int value);
    partial void OnPricingIdChanged();
    partial void OnPriceListPeriodIdChanging(int value);
    partial void OnPriceListPeriodIdChanged();
    partial void OnActivityIdChanging(System.Nullable<int> value);
    partial void OnActivityIdChanged();
    partial void OnProgramUserIdChanging(System.Nullable<int> value);
    partial void OnProgramUserIdChanged();
    partial void OnProgramUserGroupIdChanging(System.Nullable<int> value);
    partial void OnProgramUserGroupIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public Pricing()
		{
			this._ProgramUserGroup = default(EntityRef<ProgramUserGroup>);
			this._ProgramUser = default(EntityRef<ProgramUser>);
			this._PriceListPeriod = default(EntityRef<PriceListPeriod>);
			this._Activity = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PricingId
		{
			get
			{
				return this._PricingId;
			}
			set
			{
				if ((this._PricingId != value))
				{
					this.OnPricingIdChanging(value);
					this.SendPropertyChanging();
					this._PricingId = value;
					this.SendPropertyChanged("PricingId");
					this.OnPricingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListPeriodId", DbType="Int NOT NULL")]
		public int PriceListPeriodId
		{
			get
			{
				return this._PriceListPeriodId;
			}
			set
			{
				if ((this._PriceListPeriodId != value))
				{
					if (this._PriceListPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceListPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PriceListPeriodId = value;
					this.SendPropertyChanged("PriceListPeriodId");
					this.OnPriceListPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int")]
		public System.Nullable<int> ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int")]
		public System.Nullable<int> ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserGroupId", DbType="Int")]
		public System.Nullable<int> ProgramUserGroupId
		{
			get
			{
				return this._ProgramUserGroupId;
			}
			set
			{
				if ((this._ProgramUserGroupId != value))
				{
					if (this._ProgramUserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserGroupId = value;
					this.SendPropertyChanged("ProgramUserGroupId");
					this.OnProgramUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUserGroup_Pricing", Storage="_ProgramUserGroup", ThisKey="ProgramUserGroupId", OtherKey="ProgramUserGroupId", IsForeignKey=true)]
		public ProgramUserGroup ProgramUserGroup
		{
			get
			{
				return this._ProgramUserGroup.Entity;
			}
			set
			{
				ProgramUserGroup previousValue = this._ProgramUserGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUserGroup.Entity = null;
						previousValue.Pricings.Remove(this);
					}
					this._ProgramUserGroup.Entity = value;
					if ((value != null))
					{
						value.Pricings.Add(this);
						this._ProgramUserGroupId = value.ProgramUserGroupId;
					}
					else
					{
						this._ProgramUserGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUserGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Pricing", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.Pricings.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.Pricings.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceListPeriod_Pricing", Storage="_PriceListPeriod", ThisKey="PriceListPeriodId", OtherKey="PriceListPeriodId", IsForeignKey=true)]
		public PriceListPeriod PriceListPeriod
		{
			get
			{
				return this._PriceListPeriod.Entity;
			}
			set
			{
				PriceListPeriod previousValue = this._PriceListPeriod.Entity;
				if (((previousValue != value) 
							|| (this._PriceListPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceListPeriod.Entity = null;
						previousValue.Pricings.Remove(this);
					}
					this._PriceListPeriod.Entity = value;
					if ((value != null))
					{
						value.Pricings.Add(this);
						this._PriceListPeriodId = value.PriceListPeriodId;
					}
					else
					{
						this._PriceListPeriodId = default(int);
					}
					this.SendPropertyChanged("PriceListPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Pricing", Storage="_Activity", ThisKey="ActivityId", OtherKey="ActivityId", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.Pricings.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.Pricings.Add(this);
						this._ActivityId = value.ActivityId;
					}
					else
					{
						this._ActivityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceList")]
	public partial class PriceList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceListId;
		
		private string _PriceListName;
		
		private bool _StdPriceList;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Project> _Projects1;
		
		private EntitySet<PriceListPeriod> _PriceListPeriods;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceListIdChanging(int value);
    partial void OnPriceListIdChanged();
    partial void OnPriceListNameChanging(string value);
    partial void OnPriceListNameChanged();
    partial void OnStdPriceListChanging(bool value);
    partial void OnStdPriceListChanged();
    #endregion
		
		public PriceList()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Projects1 = new EntitySet<Project>(new Action<Project>(this.attach_Projects1), new Action<Project>(this.detach_Projects1));
			this._PriceListPeriods = new EntitySet<PriceListPeriod>(new Action<PriceListPeriod>(this.attach_PriceListPeriods), new Action<PriceListPeriod>(this.detach_PriceListPeriods));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PriceListId
		{
			get
			{
				return this._PriceListId;
			}
			set
			{
				if ((this._PriceListId != value))
				{
					this.OnPriceListIdChanging(value);
					this.SendPropertyChanging();
					this._PriceListId = value;
					this.SendPropertyChanged("PriceListId");
					this.OnPriceListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PriceListName
		{
			get
			{
				return this._PriceListName;
			}
			set
			{
				if ((this._PriceListName != value))
				{
					this.OnPriceListNameChanging(value);
					this.SendPropertyChanging();
					this._PriceListName = value;
					this.SendPropertyChanged("PriceListName");
					this.OnPriceListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdPriceList", DbType="Bit NOT NULL")]
		public bool StdPriceList
		{
			get
			{
				return this._StdPriceList;
			}
			set
			{
				if ((this._StdPriceList != value))
				{
					this.OnStdPriceListChanging(value);
					this.SendPropertyChanging();
					this._StdPriceList = value;
					this.SendPropertyChanged("StdPriceList");
					this.OnStdPriceListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_Project", Storage="_Projects", ThisKey="PriceListId", OtherKey="ProjectPriceListId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_Project1", Storage="_Projects1", ThisKey="PriceListId", OtherKey="StdPriceListId")]
		public EntitySet<Project> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_PriceListPeriod", Storage="_PriceListPeriods", ThisKey="PriceListId", OtherKey="PriceListId")]
		public EntitySet<PriceListPeriod> PriceListPeriods
		{
			get
			{
				return this._PriceListPeriods;
			}
			set
			{
				this._PriceListPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_Customer", Storage="_Customers", ThisKey="PriceListId", OtherKey="PriceListId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.PriceList = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.PriceList = null;
		}
		
		private void attach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PriceList1 = this;
		}
		
		private void detach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PriceList1 = null;
		}
		
		private void attach_PriceListPeriods(PriceListPeriod entity)
		{
			this.SendPropertyChanging();
			entity.PriceList = this;
		}
		
		private void detach_PriceListPeriods(PriceListPeriod entity)
		{
			this.SendPropertyChanging();
			entity.PriceList = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.PriceList1 = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.PriceList1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PriceListPeriod")]
	public partial class PriceListPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PriceListPeriodId;
		
		private int _PriceListId;
		
		private System.DateTime _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<int> _PricingPerProgramUser;
		
		private System.Nullable<int> _PricingPerActivity;
		
		private bool _Active;
		
		private bool _PriceForCustomer;
		
		private EntitySet<Pricing> _Pricings;
		
		private EntityRef<PriceList> _PriceList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceListPeriodIdChanging(int value);
    partial void OnPriceListPeriodIdChanged();
    partial void OnPriceListIdChanging(int value);
    partial void OnPriceListIdChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnPricingPerProgramUserChanging(System.Nullable<int> value);
    partial void OnPricingPerProgramUserChanged();
    partial void OnPricingPerActivityChanging(System.Nullable<int> value);
    partial void OnPricingPerActivityChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPriceForCustomerChanging(bool value);
    partial void OnPriceForCustomerChanged();
    #endregion
		
		public PriceListPeriod()
		{
			this._Pricings = new EntitySet<Pricing>(new Action<Pricing>(this.attach_Pricings), new Action<Pricing>(this.detach_Pricings));
			this._PriceList = default(EntityRef<PriceList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListPeriodId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PriceListPeriodId
		{
			get
			{
				return this._PriceListPeriodId;
			}
			set
			{
				if ((this._PriceListPeriodId != value))
				{
					this.OnPriceListPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PriceListPeriodId = value;
					this.SendPropertyChanged("PriceListPeriodId");
					this.OnPriceListPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListId", DbType="Int NOT NULL")]
		public int PriceListId
		{
			get
			{
				return this._PriceListId;
			}
			set
			{
				if ((this._PriceListId != value))
				{
					if (this._PriceList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceListIdChanging(value);
					this.SendPropertyChanging();
					this._PriceListId = value;
					this.SendPropertyChanged("PriceListId");
					this.OnPriceListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingPerProgramUser", DbType="Int")]
		public System.Nullable<int> PricingPerProgramUser
		{
			get
			{
				return this._PricingPerProgramUser;
			}
			set
			{
				if ((this._PricingPerProgramUser != value))
				{
					this.OnPricingPerProgramUserChanging(value);
					this.SendPropertyChanging();
					this._PricingPerProgramUser = value;
					this.SendPropertyChanged("PricingPerProgramUser");
					this.OnPricingPerProgramUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingPerActivity", DbType="Int")]
		public System.Nullable<int> PricingPerActivity
		{
			get
			{
				return this._PricingPerActivity;
			}
			set
			{
				if ((this._PricingPerActivity != value))
				{
					this.OnPricingPerActivityChanging(value);
					this.SendPropertyChanging();
					this._PricingPerActivity = value;
					this.SendPropertyChanged("PricingPerActivity");
					this.OnPricingPerActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceForCustomer", DbType="Bit NOT NULL")]
		public bool PriceForCustomer
		{
			get
			{
				return this._PriceForCustomer;
			}
			set
			{
				if ((this._PriceForCustomer != value))
				{
					this.OnPriceForCustomerChanging(value);
					this.SendPropertyChanging();
					this._PriceForCustomer = value;
					this.SendPropertyChanged("PriceForCustomer");
					this.OnPriceForCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceListPeriod_Pricing", Storage="_Pricings", ThisKey="PriceListPeriodId", OtherKey="PriceListPeriodId")]
		public EntitySet<Pricing> Pricings
		{
			get
			{
				return this._Pricings;
			}
			set
			{
				this._Pricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_PriceListPeriod", Storage="_PriceList", ThisKey="PriceListId", OtherKey="PriceListId", IsForeignKey=true)]
		public PriceList PriceList
		{
			get
			{
				return this._PriceList.Entity;
			}
			set
			{
				PriceList previousValue = this._PriceList.Entity;
				if (((previousValue != value) 
							|| (this._PriceList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceList.Entity = null;
						previousValue.PriceListPeriods.Remove(this);
					}
					this._PriceList.Entity = value;
					if ((value != null))
					{
						value.PriceListPeriods.Add(this);
						this._PriceListId = value.PriceListId;
					}
					else
					{
						this._PriceListId = default(int);
					}
					this.SendPropertyChanged("PriceList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.PriceListPeriod = this;
		}
		
		private void detach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.PriceListPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participant")]
	public partial class Participant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgramUserId;
		
		private int _ProjectId;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramUserIdChanging(int value);
    partial void OnProgramUserIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    #endregion
		
		public Participant()
		{
			this._ProgramUser = default(EntityRef<ProgramUser>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Participant", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.Participants.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.Participants.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(int);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Participant", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Participants.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Participants.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FreeDays")]
	public partial class FreeDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FreeDaysId;
		
		private string _Day;
		
		private System.Nullable<decimal> _Hours;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFreeDaysIdChanging(int value);
    partial void OnFreeDaysIdChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnHoursChanging(System.Nullable<decimal> value);
    partial void OnHoursChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public FreeDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeDaysId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FreeDaysId
		{
			get
			{
				return this._FreeDaysId;
			}
			set
			{
				if ((this._FreeDaysId != value))
				{
					this.OnFreeDaysIdChanging(value);
					this.SendPropertyChanging();
					this._FreeDaysId = value;
					this.SendPropertyChanged("FreeDaysId");
					this.OnFreeDaysIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookResultUnit")]
	public partial class BookResultUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookResultUnitId;
		
		private string _BookResultUnit1;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<ProgramUser> _ProgramUsers;
		
		private EntitySet<InvoiceSettingRowDetail> _InvoiceSettingRowDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookResultUnitIdChanging(int value);
    partial void OnBookResultUnitIdChanged();
    partial void OnBookResultUnit1Changing(string value);
    partial void OnBookResultUnit1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public BookResultUnit()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._ProgramUsers = new EntitySet<ProgramUser>(new Action<ProgramUser>(this.attach_ProgramUsers), new Action<ProgramUser>(this.detach_ProgramUsers));
			this._InvoiceSettingRowDetails = new EntitySet<InvoiceSettingRowDetail>(new Action<InvoiceSettingRowDetail>(this.attach_InvoiceSettingRowDetails), new Action<InvoiceSettingRowDetail>(this.detach_InvoiceSettingRowDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookResultUnitId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookResultUnitId
		{
			get
			{
				return this._BookResultUnitId;
			}
			set
			{
				if ((this._BookResultUnitId != value))
				{
					this.OnBookResultUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BookResultUnitId = value;
					this.SendPropertyChanged("BookResultUnitId");
					this.OnBookResultUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BookResultUnit", Storage="_BookResultUnit1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string BookResultUnit1
		{
			get
			{
				return this._BookResultUnit1;
			}
			set
			{
				if ((this._BookResultUnit1 != value))
				{
					this.OnBookResultUnit1Changing(value);
					this.SendPropertyChanging();
					this._BookResultUnit1 = value;
					this.SendPropertyChanged("BookResultUnit1");
					this.OnBookResultUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookResultUnit_TimeReport", Storage="_TimeReports", ThisKey="BookResultUnitId", OtherKey="BookResultUnitId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookResultUnit_ProgramUser", Storage="_ProgramUsers", ThisKey="BookResultUnitId", OtherKey="ResUnitId")]
		public EntitySet<ProgramUser> ProgramUsers
		{
			get
			{
				return this._ProgramUsers;
			}
			set
			{
				this._ProgramUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookResultUnit_InvoiceSettingRowDetail", Storage="_InvoiceSettingRowDetails", ThisKey="BookResultUnitId", OtherKey="ResUnitId")]
		public EntitySet<InvoiceSettingRowDetail> InvoiceSettingRowDetails
		{
			get
			{
				return this._InvoiceSettingRowDetails;
			}
			set
			{
				this._InvoiceSettingRowDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.BookResultUnit = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.BookResultUnit = null;
		}
		
		private void attach_ProgramUsers(ProgramUser entity)
		{
			this.SendPropertyChanging();
			entity.BookResultUnit = this;
		}
		
		private void detach_ProgramUsers(ProgramUser entity)
		{
			this.SendPropertyChanging();
			entity.BookResultUnit = null;
		}
		
		private void attach_InvoiceSettingRowDetails(InvoiceSettingRowDetail entity)
		{
			this.SendPropertyChanging();
			entity.BookResultUnit = this;
		}
		
		private void detach_InvoiceSettingRowDetails(InvoiceSettingRowDetail entity)
		{
			this.SendPropertyChanging();
			entity.BookResultUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityId;
		
		private string _ActivityName;
		
		private string _Code;
		
		private System.Nullable<int> _TimeCodeId;
		
		private bool _Active;
		
		private string _ItemText;
		
		private System.Nullable<int> _ProjectId;
		
		private bool _StdActivity;
		
		private bool _ToInvoice;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<Pricing> _Pricings;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<TimeCode> _TimeCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIdChanging(int value);
    partial void OnActivityIdChanged();
    partial void OnActivityNameChanging(string value);
    partial void OnActivityNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTimeCodeIdChanging(System.Nullable<int> value);
    partial void OnTimeCodeIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnItemTextChanging(string value);
    partial void OnItemTextChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnStdActivityChanging(bool value);
    partial void OnStdActivityChanged();
    partial void OnToInvoiceChanging(bool value);
    partial void OnToInvoiceChanged();
    #endregion
		
		public Activity()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._Pricings = new EntitySet<Pricing>(new Action<Pricing>(this.attach_Pricings), new Action<Pricing>(this.detach_Pricings));
			this._Project = default(EntityRef<Project>);
			this._TimeCode = default(EntityRef<TimeCode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ActivityName
		{
			get
			{
				return this._ActivityName;
			}
			set
			{
				if ((this._ActivityName != value))
				{
					this.OnActivityNameChanging(value);
					this.SendPropertyChanging();
					this._ActivityName = value;
					this.SendPropertyChanged("ActivityName");
					this.OnActivityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCodeId", DbType="Int")]
		public System.Nullable<int> TimeCodeId
		{
			get
			{
				return this._TimeCodeId;
			}
			set
			{
				if ((this._TimeCodeId != value))
				{
					if (this._TimeCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTimeCodeIdChanging(value);
					this.SendPropertyChanging();
					this._TimeCodeId = value;
					this.SendPropertyChanged("TimeCodeId");
					this.OnTimeCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemText", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemText
		{
			get
			{
				return this._ItemText;
			}
			set
			{
				if ((this._ItemText != value))
				{
					this.OnItemTextChanging(value);
					this.SendPropertyChanging();
					this._ItemText = value;
					this.SendPropertyChanged("ItemText");
					this.OnItemTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdActivity", DbType="Bit NOT NULL")]
		public bool StdActivity
		{
			get
			{
				return this._StdActivity;
			}
			set
			{
				if ((this._StdActivity != value))
				{
					this.OnStdActivityChanging(value);
					this.SendPropertyChanging();
					this._StdActivity = value;
					this.SendPropertyChanged("StdActivity");
					this.OnStdActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToInvoice", DbType="Bit NOT NULL")]
		public bool ToInvoice
		{
			get
			{
				return this._ToInvoice;
			}
			set
			{
				if ((this._ToInvoice != value))
				{
					this.OnToInvoiceChanging(value);
					this.SendPropertyChanging();
					this._ToInvoice = value;
					this.SendPropertyChanged("ToInvoice");
					this.OnToInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_TimeReport", Storage="_TimeReports", ThisKey="ActivityId", OtherKey="ActivityId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_Pricing", Storage="_Pricings", ThisKey="ActivityId", OtherKey="ActivityId")]
		public EntitySet<Pricing> Pricings
		{
			get
			{
				return this._Pricings;
			}
			set
			{
				this._Pricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Activity", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeCode_Activity", Storage="_TimeCode", ThisKey="TimeCodeId", OtherKey="TimeCodeId", IsForeignKey=true)]
		public TimeCode TimeCode
		{
			get
			{
				return this._TimeCode.Entity;
			}
			set
			{
				TimeCode previousValue = this._TimeCode.Entity;
				if (((previousValue != value) 
							|| (this._TimeCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeCode.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._TimeCode.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._TimeCodeId = value.TimeCodeId;
					}
					else
					{
						this._TimeCodeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TimeCode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduleRow")]
	public partial class ScheduleRow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleRowId;
		
		private int _ScheduleId;
		
		private int _PeriodWeekNo;
		
		private System.Nullable<decimal> _Monday;
		
		private System.Nullable<decimal> _Tuesday;
		
		private System.Nullable<decimal> _Wednesday;
		
		private System.Nullable<decimal> _Thursday;
		
		private System.Nullable<decimal> _Friday;
		
		private System.Nullable<decimal> _Saturday;
		
		private System.Nullable<decimal> _Sunday;
		
		private EntityRef<Schedule> _Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleRowIdChanging(int value);
    partial void OnScheduleRowIdChanged();
    partial void OnScheduleIdChanging(int value);
    partial void OnScheduleIdChanged();
    partial void OnPeriodWeekNoChanging(int value);
    partial void OnPeriodWeekNoChanged();
    partial void OnMondayChanging(System.Nullable<decimal> value);
    partial void OnMondayChanged();
    partial void OnTuesdayChanging(System.Nullable<decimal> value);
    partial void OnTuesdayChanged();
    partial void OnWednesdayChanging(System.Nullable<decimal> value);
    partial void OnWednesdayChanged();
    partial void OnThursdayChanging(System.Nullable<decimal> value);
    partial void OnThursdayChanged();
    partial void OnFridayChanging(System.Nullable<decimal> value);
    partial void OnFridayChanged();
    partial void OnSaturdayChanging(System.Nullable<decimal> value);
    partial void OnSaturdayChanged();
    partial void OnSundayChanging(System.Nullable<decimal> value);
    partial void OnSundayChanged();
    #endregion
		
		public ScheduleRow()
		{
			this._Schedule = default(EntityRef<Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleRowId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScheduleRowId
		{
			get
			{
				return this._ScheduleRowId;
			}
			set
			{
				if ((this._ScheduleRowId != value))
				{
					this.OnScheduleRowIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleRowId = value;
					this.SendPropertyChanged("ScheduleRowId");
					this.OnScheduleRowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleId", DbType="Int NOT NULL")]
		public int ScheduleId
		{
			get
			{
				return this._ScheduleId;
			}
			set
			{
				if ((this._ScheduleId != value))
				{
					if (this._Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ScheduleId = value;
					this.SendPropertyChanged("ScheduleId");
					this.OnScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodWeekNo", DbType="Int NOT NULL")]
		public int PeriodWeekNo
		{
			get
			{
				return this._PeriodWeekNo;
			}
			set
			{
				if ((this._PeriodWeekNo != value))
				{
					this.OnPeriodWeekNoChanging(value);
					this.SendPropertyChanging();
					this._PeriodWeekNo = value;
					this.SendPropertyChanged("PeriodWeekNo");
					this.OnPeriodWeekNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Monday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Monday
		{
			get
			{
				return this._Monday;
			}
			set
			{
				if ((this._Monday != value))
				{
					this.OnMondayChanging(value);
					this.SendPropertyChanging();
					this._Monday = value;
					this.SendPropertyChanged("Monday");
					this.OnMondayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuesday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Tuesday
		{
			get
			{
				return this._Tuesday;
			}
			set
			{
				if ((this._Tuesday != value))
				{
					this.OnTuesdayChanging(value);
					this.SendPropertyChanging();
					this._Tuesday = value;
					this.SendPropertyChanged("Tuesday");
					this.OnTuesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wednesday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Wednesday
		{
			get
			{
				return this._Wednesday;
			}
			set
			{
				if ((this._Wednesday != value))
				{
					this.OnWednesdayChanging(value);
					this.SendPropertyChanging();
					this._Wednesday = value;
					this.SendPropertyChanged("Wednesday");
					this.OnWednesdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thursday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Thursday
		{
			get
			{
				return this._Thursday;
			}
			set
			{
				if ((this._Thursday != value))
				{
					this.OnThursdayChanging(value);
					this.SendPropertyChanging();
					this._Thursday = value;
					this.SendPropertyChanged("Thursday");
					this.OnThursdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Friday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Friday
		{
			get
			{
				return this._Friday;
			}
			set
			{
				if ((this._Friday != value))
				{
					this.OnFridayChanging(value);
					this.SendPropertyChanging();
					this._Friday = value;
					this.SendPropertyChanged("Friday");
					this.OnFridayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saturday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Saturday
		{
			get
			{
				return this._Saturday;
			}
			set
			{
				if ((this._Saturday != value))
				{
					this.OnSaturdayChanging(value);
					this.SendPropertyChanging();
					this._Saturday = value;
					this.SendPropertyChanged("Saturday");
					this.OnSaturdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sunday", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Sunday
		{
			get
			{
				return this._Sunday;
			}
			set
			{
				if ((this._Sunday != value))
				{
					this.OnSundayChanging(value);
					this.SendPropertyChanging();
					this._Sunday = value;
					this.SendPropertyChanged("Sunday");
					this.OnSundayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schedule_ScheduleRow", Storage="_Schedule", ThisKey="ScheduleId", OtherKey="ScheduleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Schedule Schedule
		{
			get
			{
				return this._Schedule.Entity;
			}
			set
			{
				Schedule previousValue = this._Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schedule.Entity = null;
						previousValue.ScheduleRows.Remove(this);
					}
					this._Schedule.Entity = value;
					if ((value != null))
					{
						value.ScheduleRows.Add(this);
						this._ScheduleId = value.ScheduleId;
					}
					else
					{
						this._ScheduleId = default(int);
					}
					this.SendPropertyChanged("Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerCategory")]
	public partial class CustomerCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerCategoryId;
		
		private string _CustomerCategory1;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCategoryIdChanging(int value);
    partial void OnCustomerCategoryIdChanged();
    partial void OnCustomerCategory1Changing(string value);
    partial void OnCustomerCategory1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public CustomerCategory()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerCategoryId
		{
			get
			{
				return this._CustomerCategoryId;
			}
			set
			{
				if ((this._CustomerCategoryId != value))
				{
					this.OnCustomerCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerCategoryId = value;
					this.SendPropertyChanged("CustomerCategoryId");
					this.OnCustomerCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CustomerCategory", Storage="_CustomerCategory1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerCategory1
		{
			get
			{
				return this._CustomerCategory1;
			}
			set
			{
				if ((this._CustomerCategory1 != value))
				{
					this.OnCustomerCategory1Changing(value);
					this.SendPropertyChanging();
					this._CustomerCategory1 = value;
					this.SendPropertyChanged("CustomerCategory1");
					this.OnCustomerCategory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerCategory_Customer", Storage="_Customers", ThisKey="CustomerCategoryId", OtherKey="CustomerCategoryId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCategory = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private int _ProgramUserId;
		
		private string _CustomerNo;
		
		private System.Nullable<int> _IndustryId;
		
		private bool _ExternCustomer;
		
		private string _Reference;
		
		private string _CustomerName;
		
		private string _OrganisationNo;
		
		private System.Nullable<int> _PriceListId;
		
		private System.Nullable<decimal> _CalcFee;
		
		private int _PriceList;
		
		private bool _StdInvoice;
		
		private bool _DetailLevelAccountsYear;
		
		private bool _DetailLevelProject;
		
		private bool _DetailLevelActivity;
		
		private bool _DetailLevelProgramUser;
		
		private bool _DetailLevelDate;
		
		private bool _DetailLevelPartSumAccountsYear;
		
		private bool _DetailLevelPartSumProject;
		
		private bool _DetailLevelPartSumActivity;
		
		private bool _DetailLevelPartSumProgramUser;
		
		private string _Comment;
		
		private bool _Active;
		
		private bool _Transference;
		
		private System.Nullable<decimal> _Discount;
		
		private char _Company;
		
		private System.Nullable<decimal> _HourlyPrice;
		
		private string _InvoiceHeaderText;
		
		private bool _AuthorizedAuditorRequired;
		
		private string _Telephone;
		
		private string _Telephone2;
		
		private string _Fax;
		
		private string _EmailAddress;
		
		private string _Internet;
		
		private string _InvoiceAddress;
		
		private string _InvoiceAddress2;
		
		private string _InvoicePostCode;
		
		private string _InvoiceCity;
		
		private System.Nullable<int> _CountryId;
		
		private string _InvoiceVisitAddress;
		
		private string _InvoiceEAN;
		
		private string _DeliveryName;
		
		private string _DeliveryAddress;
		
		private string _DeliveryAddress2;
		
		private string _DeliveryPostCode;
		
		private string _DeliveryCity;
		
		private System.Nullable<int> _DeliveryCountryId;
		
		private string _DeliveryVisitAddress;
		
		private string _DeliveryEAN;
		
		private string _DeliveryTelephone1;
		
		private string _DeliveryTelephone2;
		
		private string _DeliveryFax;
		
		private string _OtherVATNbr;
		
		private string _OtherSelectionNotion;
		
		private System.Nullable<decimal> _OtherCredtLimit;
		
		private string _OtherBankAccount;
		
		private string _OtherPostAccount;
		
		private string _OtherShortName;
		
		private string _OtherDistrictCode;
		
		private System.Nullable<int> _CustomerCategoryId;
		
		private System.Nullable<int> _BuildService;
		
		private System.Nullable<int> _ExportCustomer;
		
		private System.Nullable<int> _EUCustomer;
		
		private bool _AcceptsAd;
		
		private string _MobilePhone;
		
		private System.Nullable<int> _CreditCheckType;
		
		private System.Nullable<System.DateTime> _CreditCheckDate;
		
		private string _CreditCheckOrgNo;
		
		private string _CreditCheckCName;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<CustomerCategory> _CustomerCategory;
		
		private EntityRef<PriceList> _PriceList1;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnProgramUserIdChanging(int value);
    partial void OnProgramUserIdChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnIndustryIdChanging(System.Nullable<int> value);
    partial void OnIndustryIdChanged();
    partial void OnExternCustomerChanging(bool value);
    partial void OnExternCustomerChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnOrganisationNoChanging(string value);
    partial void OnOrganisationNoChanged();
    partial void OnPriceListIdChanging(System.Nullable<int> value);
    partial void OnPriceListIdChanged();
    partial void OnCalcFeeChanging(System.Nullable<decimal> value);
    partial void OnCalcFeeChanged();
    partial void OnPriceListChanging(int value);
    partial void OnPriceListChanged();
    partial void OnStdInvoiceChanging(bool value);
    partial void OnStdInvoiceChanged();
    partial void OnDetailLevelAccountsYearChanging(bool value);
    partial void OnDetailLevelAccountsYearChanged();
    partial void OnDetailLevelProjectChanging(bool value);
    partial void OnDetailLevelProjectChanged();
    partial void OnDetailLevelActivityChanging(bool value);
    partial void OnDetailLevelActivityChanged();
    partial void OnDetailLevelProgramUserChanging(bool value);
    partial void OnDetailLevelProgramUserChanged();
    partial void OnDetailLevelDateChanging(bool value);
    partial void OnDetailLevelDateChanged();
    partial void OnDetailLevelPartSumAccountsYearChanging(bool value);
    partial void OnDetailLevelPartSumAccountsYearChanged();
    partial void OnDetailLevelPartSumProjectChanging(bool value);
    partial void OnDetailLevelPartSumProjectChanged();
    partial void OnDetailLevelPartSumActivityChanging(bool value);
    partial void OnDetailLevelPartSumActivityChanged();
    partial void OnDetailLevelPartSumProgramUserChanging(bool value);
    partial void OnDetailLevelPartSumProgramUserChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnTransferenceChanging(bool value);
    partial void OnTransferenceChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnCompanyChanging(char value);
    partial void OnCompanyChanged();
    partial void OnHourlyPriceChanging(System.Nullable<decimal> value);
    partial void OnHourlyPriceChanged();
    partial void OnInvoiceHeaderTextChanging(string value);
    partial void OnInvoiceHeaderTextChanged();
    partial void OnAuthorizedAuditorRequiredChanging(bool value);
    partial void OnAuthorizedAuditorRequiredChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnTelephone2Changing(string value);
    partial void OnTelephone2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnInternetChanging(string value);
    partial void OnInternetChanged();
    partial void OnInvoiceAddressChanging(string value);
    partial void OnInvoiceAddressChanged();
    partial void OnInvoiceAddress2Changing(string value);
    partial void OnInvoiceAddress2Changed();
    partial void OnInvoicePostCodeChanging(string value);
    partial void OnInvoicePostCodeChanged();
    partial void OnInvoiceCityChanging(string value);
    partial void OnInvoiceCityChanged();
    partial void OnCountryIdChanging(System.Nullable<int> value);
    partial void OnCountryIdChanged();
    partial void OnInvoiceVisitAddressChanging(string value);
    partial void OnInvoiceVisitAddressChanged();
    partial void OnInvoiceEANChanging(string value);
    partial void OnInvoiceEANChanged();
    partial void OnDeliveryNameChanging(string value);
    partial void OnDeliveryNameChanged();
    partial void OnDeliveryAddressChanging(string value);
    partial void OnDeliveryAddressChanged();
    partial void OnDeliveryAddress2Changing(string value);
    partial void OnDeliveryAddress2Changed();
    partial void OnDeliveryPostCodeChanging(string value);
    partial void OnDeliveryPostCodeChanged();
    partial void OnDeliveryCityChanging(string value);
    partial void OnDeliveryCityChanged();
    partial void OnDeliveryCountryIdChanging(System.Nullable<int> value);
    partial void OnDeliveryCountryIdChanged();
    partial void OnDeliveryVisitAddressChanging(string value);
    partial void OnDeliveryVisitAddressChanged();
    partial void OnDeliveryEANChanging(string value);
    partial void OnDeliveryEANChanged();
    partial void OnDeliveryTelephone1Changing(string value);
    partial void OnDeliveryTelephone1Changed();
    partial void OnDeliveryTelephone2Changing(string value);
    partial void OnDeliveryTelephone2Changed();
    partial void OnDeliveryFaxChanging(string value);
    partial void OnDeliveryFaxChanged();
    partial void OnOtherVATNbrChanging(string value);
    partial void OnOtherVATNbrChanged();
    partial void OnOtherSelectionNotionChanging(string value);
    partial void OnOtherSelectionNotionChanged();
    partial void OnOtherCredtLimitChanging(System.Nullable<decimal> value);
    partial void OnOtherCredtLimitChanged();
    partial void OnOtherBankAccountChanging(string value);
    partial void OnOtherBankAccountChanged();
    partial void OnOtherPostAccountChanging(string value);
    partial void OnOtherPostAccountChanged();
    partial void OnOtherShortNameChanging(string value);
    partial void OnOtherShortNameChanged();
    partial void OnOtherDistrictCodeChanging(string value);
    partial void OnOtherDistrictCodeChanged();
    partial void OnCustomerCategoryIdChanging(System.Nullable<int> value);
    partial void OnCustomerCategoryIdChanged();
    partial void OnBuildServiceChanging(System.Nullable<int> value);
    partial void OnBuildServiceChanged();
    partial void OnExportCustomerChanging(System.Nullable<int> value);
    partial void OnExportCustomerChanged();
    partial void OnEUCustomerChanging(System.Nullable<int> value);
    partial void OnEUCustomerChanged();
    partial void OnAcceptsAdChanging(bool value);
    partial void OnAcceptsAdChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnCreditCheckTypeChanging(System.Nullable<int> value);
    partial void OnCreditCheckTypeChanged();
    partial void OnCreditCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreditCheckDateChanged();
    partial void OnCreditCheckOrgNoChanging(string value);
    partial void OnCreditCheckOrgNoChanged();
    partial void OnCreditCheckCNameChanging(string value);
    partial void OnCreditCheckCNameChanged();
    #endregion
		
		public Customer()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._CustomerCategory = default(EntityRef<CustomerCategory>);
			this._PriceList1 = default(EntityRef<PriceList>);
			this._ProgramUser = default(EntityRef<ProgramUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramUserId", DbType="Int NOT NULL")]
		public int ProgramUserId
		{
			get
			{
				return this._ProgramUserId;
			}
			set
			{
				if ((this._ProgramUserId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgramUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProgramUserId = value;
					this.SendPropertyChanged("ProgramUserId");
					this.OnProgramUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndustryId", DbType="Int")]
		public System.Nullable<int> IndustryId
		{
			get
			{
				return this._IndustryId;
			}
			set
			{
				if ((this._IndustryId != value))
				{
					this.OnIndustryIdChanging(value);
					this.SendPropertyChanging();
					this._IndustryId = value;
					this.SendPropertyChanged("IndustryId");
					this.OnIndustryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternCustomer", DbType="Bit NOT NULL")]
		public bool ExternCustomer
		{
			get
			{
				return this._ExternCustomer;
			}
			set
			{
				if ((this._ExternCustomer != value))
				{
					this.OnExternCustomerChanging(value);
					this.SendPropertyChanging();
					this._ExternCustomer = value;
					this.SendPropertyChanged("ExternCustomer");
					this.OnExternCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string OrganisationNo
		{
			get
			{
				return this._OrganisationNo;
			}
			set
			{
				if ((this._OrganisationNo != value))
				{
					this.OnOrganisationNoChanging(value);
					this.SendPropertyChanging();
					this._OrganisationNo = value;
					this.SendPropertyChanged("OrganisationNo");
					this.OnOrganisationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceListId", DbType="Int")]
		public System.Nullable<int> PriceListId
		{
			get
			{
				return this._PriceListId;
			}
			set
			{
				if ((this._PriceListId != value))
				{
					if (this._PriceList1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceListIdChanging(value);
					this.SendPropertyChanging();
					this._PriceListId = value;
					this.SendPropertyChanged("PriceListId");
					this.OnPriceListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CalcFee
		{
			get
			{
				return this._CalcFee;
			}
			set
			{
				if ((this._CalcFee != value))
				{
					this.OnCalcFeeChanging(value);
					this.SendPropertyChanging();
					this._CalcFee = value;
					this.SendPropertyChanged("CalcFee");
					this.OnCalcFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceList", DbType="Int NOT NULL")]
		public int PriceList
		{
			get
			{
				return this._PriceList;
			}
			set
			{
				if ((this._PriceList != value))
				{
					this.OnPriceListChanging(value);
					this.SendPropertyChanging();
					this._PriceList = value;
					this.SendPropertyChanged("PriceList");
					this.OnPriceListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdInvoice", DbType="Bit NOT NULL")]
		public bool StdInvoice
		{
			get
			{
				return this._StdInvoice;
			}
			set
			{
				if ((this._StdInvoice != value))
				{
					this.OnStdInvoiceChanging(value);
					this.SendPropertyChanging();
					this._StdInvoice = value;
					this.SendPropertyChanged("StdInvoice");
					this.OnStdInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelAccountsYear", DbType="Bit NOT NULL")]
		public bool DetailLevelAccountsYear
		{
			get
			{
				return this._DetailLevelAccountsYear;
			}
			set
			{
				if ((this._DetailLevelAccountsYear != value))
				{
					this.OnDetailLevelAccountsYearChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelAccountsYear = value;
					this.SendPropertyChanged("DetailLevelAccountsYear");
					this.OnDetailLevelAccountsYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelProject", DbType="Bit NOT NULL")]
		public bool DetailLevelProject
		{
			get
			{
				return this._DetailLevelProject;
			}
			set
			{
				if ((this._DetailLevelProject != value))
				{
					this.OnDetailLevelProjectChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelProject = value;
					this.SendPropertyChanged("DetailLevelProject");
					this.OnDetailLevelProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelActivity", DbType="Bit NOT NULL")]
		public bool DetailLevelActivity
		{
			get
			{
				return this._DetailLevelActivity;
			}
			set
			{
				if ((this._DetailLevelActivity != value))
				{
					this.OnDetailLevelActivityChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelActivity = value;
					this.SendPropertyChanged("DetailLevelActivity");
					this.OnDetailLevelActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelProgramUser", DbType="Bit NOT NULL")]
		public bool DetailLevelProgramUser
		{
			get
			{
				return this._DetailLevelProgramUser;
			}
			set
			{
				if ((this._DetailLevelProgramUser != value))
				{
					this.OnDetailLevelProgramUserChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelProgramUser = value;
					this.SendPropertyChanged("DetailLevelProgramUser");
					this.OnDetailLevelProgramUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelDate", DbType="Bit NOT NULL")]
		public bool DetailLevelDate
		{
			get
			{
				return this._DetailLevelDate;
			}
			set
			{
				if ((this._DetailLevelDate != value))
				{
					this.OnDetailLevelDateChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelDate = value;
					this.SendPropertyChanged("DetailLevelDate");
					this.OnDetailLevelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumAccountsYear", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumAccountsYear
		{
			get
			{
				return this._DetailLevelPartSumAccountsYear;
			}
			set
			{
				if ((this._DetailLevelPartSumAccountsYear != value))
				{
					this.OnDetailLevelPartSumAccountsYearChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumAccountsYear = value;
					this.SendPropertyChanged("DetailLevelPartSumAccountsYear");
					this.OnDetailLevelPartSumAccountsYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumProject", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumProject
		{
			get
			{
				return this._DetailLevelPartSumProject;
			}
			set
			{
				if ((this._DetailLevelPartSumProject != value))
				{
					this.OnDetailLevelPartSumProjectChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumProject = value;
					this.SendPropertyChanged("DetailLevelPartSumProject");
					this.OnDetailLevelPartSumProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumActivity", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumActivity
		{
			get
			{
				return this._DetailLevelPartSumActivity;
			}
			set
			{
				if ((this._DetailLevelPartSumActivity != value))
				{
					this.OnDetailLevelPartSumActivityChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumActivity = value;
					this.SendPropertyChanged("DetailLevelPartSumActivity");
					this.OnDetailLevelPartSumActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumProgramUser", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumProgramUser
		{
			get
			{
				return this._DetailLevelPartSumProgramUser;
			}
			set
			{
				if ((this._DetailLevelPartSumProgramUser != value))
				{
					this.OnDetailLevelPartSumProgramUserChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumProgramUser = value;
					this.SendPropertyChanged("DetailLevelPartSumProgramUser");
					this.OnDetailLevelPartSumProgramUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transference", DbType="Bit NOT NULL")]
		public bool Transference
		{
			get
			{
				return this._Transference;
			}
			set
			{
				if ((this._Transference != value))
				{
					this.OnTransferenceChanging(value);
					this.SendPropertyChanging();
					this._Transference = value;
					this.SendPropertyChanged("Transference");
					this.OnTransferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="Char(1) NOT NULL")]
		public char Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> HourlyPrice
		{
			get
			{
				return this._HourlyPrice;
			}
			set
			{
				if ((this._HourlyPrice != value))
				{
					this.OnHourlyPriceChanging(value);
					this.SendPropertyChanging();
					this._HourlyPrice = value;
					this.SendPropertyChanged("HourlyPrice");
					this.OnHourlyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceHeaderText", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string InvoiceHeaderText
		{
			get
			{
				return this._InvoiceHeaderText;
			}
			set
			{
				if ((this._InvoiceHeaderText != value))
				{
					this.OnInvoiceHeaderTextChanging(value);
					this.SendPropertyChanging();
					this._InvoiceHeaderText = value;
					this.SendPropertyChanged("InvoiceHeaderText");
					this.OnInvoiceHeaderTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizedAuditorRequired", DbType="Bit NOT NULL")]
		public bool AuthorizedAuditorRequired
		{
			get
			{
				return this._AuthorizedAuditorRequired;
			}
			set
			{
				if ((this._AuthorizedAuditorRequired != value))
				{
					this.OnAuthorizedAuditorRequiredChanging(value);
					this.SendPropertyChanging();
					this._AuthorizedAuditorRequired = value;
					this.SendPropertyChanged("AuthorizedAuditorRequired");
					this.OnAuthorizedAuditorRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone2", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Internet", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Internet
		{
			get
			{
				return this._Internet;
			}
			set
			{
				if ((this._Internet != value))
				{
					this.OnInternetChanging(value);
					this.SendPropertyChanging();
					this._Internet = value;
					this.SendPropertyChanged("Internet");
					this.OnInternetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceAddress
		{
			get
			{
				return this._InvoiceAddress;
			}
			set
			{
				if ((this._InvoiceAddress != value))
				{
					this.OnInvoiceAddressChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAddress = value;
					this.SendPropertyChanged("InvoiceAddress");
					this.OnInvoiceAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAddress2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceAddress2
		{
			get
			{
				return this._InvoiceAddress2;
			}
			set
			{
				if ((this._InvoiceAddress2 != value))
				{
					this.OnInvoiceAddress2Changing(value);
					this.SendPropertyChanging();
					this._InvoiceAddress2 = value;
					this.SendPropertyChanged("InvoiceAddress2");
					this.OnInvoiceAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePostCode", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string InvoicePostCode
		{
			get
			{
				return this._InvoicePostCode;
			}
			set
			{
				if ((this._InvoicePostCode != value))
				{
					this.OnInvoicePostCodeChanging(value);
					this.SendPropertyChanging();
					this._InvoicePostCode = value;
					this.SendPropertyChanged("InvoicePostCode");
					this.OnInvoicePostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceCity
		{
			get
			{
				return this._InvoiceCity;
			}
			set
			{
				if ((this._InvoiceCity != value))
				{
					this.OnInvoiceCityChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCity = value;
					this.SendPropertyChanged("InvoiceCity");
					this.OnInvoiceCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="Int")]
		public System.Nullable<int> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceVisitAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceVisitAddress
		{
			get
			{
				return this._InvoiceVisitAddress;
			}
			set
			{
				if ((this._InvoiceVisitAddress != value))
				{
					this.OnInvoiceVisitAddressChanging(value);
					this.SendPropertyChanging();
					this._InvoiceVisitAddress = value;
					this.SendPropertyChanged("InvoiceVisitAddress");
					this.OnInvoiceVisitAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceEAN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string InvoiceEAN
		{
			get
			{
				return this._InvoiceEAN;
			}
			set
			{
				if ((this._InvoiceEAN != value))
				{
					this.OnInvoiceEANChanging(value);
					this.SendPropertyChanging();
					this._InvoiceEAN = value;
					this.SendPropertyChanged("InvoiceEAN");
					this.OnInvoiceEANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryName
		{
			get
			{
				return this._DeliveryName;
			}
			set
			{
				if ((this._DeliveryName != value))
				{
					this.OnDeliveryNameChanging(value);
					this.SendPropertyChanging();
					this._DeliveryName = value;
					this.SendPropertyChanged("DeliveryName");
					this.OnDeliveryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryAddress
		{
			get
			{
				return this._DeliveryAddress;
			}
			set
			{
				if ((this._DeliveryAddress != value))
				{
					this.OnDeliveryAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddress = value;
					this.SendPropertyChanged("DeliveryAddress");
					this.OnDeliveryAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddress2", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryAddress2
		{
			get
			{
				return this._DeliveryAddress2;
			}
			set
			{
				if ((this._DeliveryAddress2 != value))
				{
					this.OnDeliveryAddress2Changing(value);
					this.SendPropertyChanging();
					this._DeliveryAddress2 = value;
					this.SendPropertyChanged("DeliveryAddress2");
					this.OnDeliveryAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryPostCode", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string DeliveryPostCode
		{
			get
			{
				return this._DeliveryPostCode;
			}
			set
			{
				if ((this._DeliveryPostCode != value))
				{
					this.OnDeliveryPostCodeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryPostCode = value;
					this.SendPropertyChanged("DeliveryPostCode");
					this.OnDeliveryPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryCity
		{
			get
			{
				return this._DeliveryCity;
			}
			set
			{
				if ((this._DeliveryCity != value))
				{
					this.OnDeliveryCityChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCity = value;
					this.SendPropertyChanged("DeliveryCity");
					this.OnDeliveryCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCountryId", DbType="Int")]
		public System.Nullable<int> DeliveryCountryId
		{
			get
			{
				return this._DeliveryCountryId;
			}
			set
			{
				if ((this._DeliveryCountryId != value))
				{
					this.OnDeliveryCountryIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCountryId = value;
					this.SendPropertyChanged("DeliveryCountryId");
					this.OnDeliveryCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryVisitAddress", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string DeliveryVisitAddress
		{
			get
			{
				return this._DeliveryVisitAddress;
			}
			set
			{
				if ((this._DeliveryVisitAddress != value))
				{
					this.OnDeliveryVisitAddressChanging(value);
					this.SendPropertyChanging();
					this._DeliveryVisitAddress = value;
					this.SendPropertyChanged("DeliveryVisitAddress");
					this.OnDeliveryVisitAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryEAN", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DeliveryEAN
		{
			get
			{
				return this._DeliveryEAN;
			}
			set
			{
				if ((this._DeliveryEAN != value))
				{
					this.OnDeliveryEANChanging(value);
					this.SendPropertyChanging();
					this._DeliveryEAN = value;
					this.SendPropertyChanged("DeliveryEAN");
					this.OnDeliveryEANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTelephone1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DeliveryTelephone1
		{
			get
			{
				return this._DeliveryTelephone1;
			}
			set
			{
				if ((this._DeliveryTelephone1 != value))
				{
					this.OnDeliveryTelephone1Changing(value);
					this.SendPropertyChanging();
					this._DeliveryTelephone1 = value;
					this.SendPropertyChanged("DeliveryTelephone1");
					this.OnDeliveryTelephone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryTelephone2", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DeliveryTelephone2
		{
			get
			{
				return this._DeliveryTelephone2;
			}
			set
			{
				if ((this._DeliveryTelephone2 != value))
				{
					this.OnDeliveryTelephone2Changing(value);
					this.SendPropertyChanging();
					this._DeliveryTelephone2 = value;
					this.SendPropertyChanged("DeliveryTelephone2");
					this.OnDeliveryTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryFax", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DeliveryFax
		{
			get
			{
				return this._DeliveryFax;
			}
			set
			{
				if ((this._DeliveryFax != value))
				{
					this.OnDeliveryFaxChanging(value);
					this.SendPropertyChanging();
					this._DeliveryFax = value;
					this.SendPropertyChanged("DeliveryFax");
					this.OnDeliveryFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherVATNbr", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OtherVATNbr
		{
			get
			{
				return this._OtherVATNbr;
			}
			set
			{
				if ((this._OtherVATNbr != value))
				{
					this.OnOtherVATNbrChanging(value);
					this.SendPropertyChanging();
					this._OtherVATNbr = value;
					this.SendPropertyChanged("OtherVATNbr");
					this.OnOtherVATNbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSelectionNotion", DbType="VarChar(33) NOT NULL", CanBeNull=false)]
		public string OtherSelectionNotion
		{
			get
			{
				return this._OtherSelectionNotion;
			}
			set
			{
				if ((this._OtherSelectionNotion != value))
				{
					this.OnOtherSelectionNotionChanging(value);
					this.SendPropertyChanging();
					this._OtherSelectionNotion = value;
					this.SendPropertyChanged("OtherSelectionNotion");
					this.OnOtherSelectionNotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCredtLimit", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> OtherCredtLimit
		{
			get
			{
				return this._OtherCredtLimit;
			}
			set
			{
				if ((this._OtherCredtLimit != value))
				{
					this.OnOtherCredtLimitChanging(value);
					this.SendPropertyChanging();
					this._OtherCredtLimit = value;
					this.SendPropertyChanged("OtherCredtLimit");
					this.OnOtherCredtLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherBankAccount", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string OtherBankAccount
		{
			get
			{
				return this._OtherBankAccount;
			}
			set
			{
				if ((this._OtherBankAccount != value))
				{
					this.OnOtherBankAccountChanging(value);
					this.SendPropertyChanging();
					this._OtherBankAccount = value;
					this.SendPropertyChanged("OtherBankAccount");
					this.OnOtherBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherPostAccount", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string OtherPostAccount
		{
			get
			{
				return this._OtherPostAccount;
			}
			set
			{
				if ((this._OtherPostAccount != value))
				{
					this.OnOtherPostAccountChanging(value);
					this.SendPropertyChanging();
					this._OtherPostAccount = value;
					this.SendPropertyChanged("OtherPostAccount");
					this.OnOtherPostAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherShortName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string OtherShortName
		{
			get
			{
				return this._OtherShortName;
			}
			set
			{
				if ((this._OtherShortName != value))
				{
					this.OnOtherShortNameChanging(value);
					this.SendPropertyChanging();
					this._OtherShortName = value;
					this.SendPropertyChanged("OtherShortName");
					this.OnOtherShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDistrictCode", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string OtherDistrictCode
		{
			get
			{
				return this._OtherDistrictCode;
			}
			set
			{
				if ((this._OtherDistrictCode != value))
				{
					this.OnOtherDistrictCodeChanging(value);
					this.SendPropertyChanging();
					this._OtherDistrictCode = value;
					this.SendPropertyChanged("OtherDistrictCode");
					this.OnOtherDistrictCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCategoryId", DbType="Int")]
		public System.Nullable<int> CustomerCategoryId
		{
			get
			{
				return this._CustomerCategoryId;
			}
			set
			{
				if ((this._CustomerCategoryId != value))
				{
					if (this._CustomerCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerCategoryId = value;
					this.SendPropertyChanged("CustomerCategoryId");
					this.OnCustomerCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildService", DbType="Int")]
		public System.Nullable<int> BuildService
		{
			get
			{
				return this._BuildService;
			}
			set
			{
				if ((this._BuildService != value))
				{
					this.OnBuildServiceChanging(value);
					this.SendPropertyChanging();
					this._BuildService = value;
					this.SendPropertyChanged("BuildService");
					this.OnBuildServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportCustomer", DbType="Int")]
		public System.Nullable<int> ExportCustomer
		{
			get
			{
				return this._ExportCustomer;
			}
			set
			{
				if ((this._ExportCustomer != value))
				{
					this.OnExportCustomerChanging(value);
					this.SendPropertyChanging();
					this._ExportCustomer = value;
					this.SendPropertyChanged("ExportCustomer");
					this.OnExportCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EUCustomer", DbType="Int")]
		public System.Nullable<int> EUCustomer
		{
			get
			{
				return this._EUCustomer;
			}
			set
			{
				if ((this._EUCustomer != value))
				{
					this.OnEUCustomerChanging(value);
					this.SendPropertyChanging();
					this._EUCustomer = value;
					this.SendPropertyChanged("EUCustomer");
					this.OnEUCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsAd", DbType="Bit NOT NULL")]
		public bool AcceptsAd
		{
			get
			{
				return this._AcceptsAd;
			}
			set
			{
				if ((this._AcceptsAd != value))
				{
					this.OnAcceptsAdChanging(value);
					this.SendPropertyChanging();
					this._AcceptsAd = value;
					this.SendPropertyChanged("AcceptsAd");
					this.OnAcceptsAdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCheckType", DbType="Int")]
		public System.Nullable<int> CreditCheckType
		{
			get
			{
				return this._CreditCheckType;
			}
			set
			{
				if ((this._CreditCheckType != value))
				{
					this.OnCreditCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCheckType = value;
					this.SendPropertyChanged("CreditCheckType");
					this.OnCreditCheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCheckDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreditCheckDate
		{
			get
			{
				return this._CreditCheckDate;
			}
			set
			{
				if ((this._CreditCheckDate != value))
				{
					this.OnCreditCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CreditCheckDate = value;
					this.SendPropertyChanged("CreditCheckDate");
					this.OnCreditCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCheckOrgNo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreditCheckOrgNo
		{
			get
			{
				return this._CreditCheckOrgNo;
			}
			set
			{
				if ((this._CreditCheckOrgNo != value))
				{
					this.OnCreditCheckOrgNoChanging(value);
					this.SendPropertyChanging();
					this._CreditCheckOrgNo = value;
					this.SendPropertyChanged("CreditCheckOrgNo");
					this.OnCreditCheckOrgNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCheckCName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CreditCheckCName
		{
			get
			{
				return this._CreditCheckCName;
			}
			set
			{
				if ((this._CreditCheckCName != value))
				{
					this.OnCreditCheckCNameChanging(value);
					this.SendPropertyChanging();
					this._CreditCheckCName = value;
					this.SendPropertyChanged("CreditCheckCName");
					this.OnCreditCheckCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_TimeReport", Storage="_TimeReports", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Project", Storage="_Projects", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Invoices", ThisKey="CustomerId", OtherKey="CustomerId")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerCategory_Customer", Storage="_CustomerCategory", ThisKey="CustomerCategoryId", OtherKey="CustomerCategoryId", IsForeignKey=true)]
		public CustomerCategory CustomerCategory
		{
			get
			{
				return this._CustomerCategory.Entity;
			}
			set
			{
				CustomerCategory previousValue = this._CustomerCategory.Entity;
				if (((previousValue != value) 
							|| (this._CustomerCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerCategory.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerCategory.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CustomerCategoryId = value.CustomerCategoryId;
					}
					else
					{
						this._CustomerCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CustomerCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PriceList_Customer", Storage="_PriceList1", ThisKey="PriceListId", OtherKey="PriceListId", IsForeignKey=true)]
		public PriceList PriceList1
		{
			get
			{
				return this._PriceList1.Entity;
			}
			set
			{
				PriceList previousValue = this._PriceList1.Entity;
				if (((previousValue != value) 
							|| (this._PriceList1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PriceList1.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._PriceList1.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._PriceListId = value.PriceListId;
					}
					else
					{
						this._PriceListId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PriceList1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Customer", Storage="_ProgramUser", ThisKey="ProgramUserId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._ProgramUserId = value.ProgramUserId;
					}
					else
					{
						this._ProgramUserId = default(int);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectCategory")]
	public partial class ProjectCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectCategoryId;
		
		private string _ProjectCategory1;
		
		private string _Description;
		
		private bool _Active;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectCategoryIdChanging(int value);
    partial void OnProjectCategoryIdChanged();
    partial void OnProjectCategory1Changing(string value);
    partial void OnProjectCategory1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ProjectCategory()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectCategoryId
		{
			get
			{
				return this._ProjectCategoryId;
			}
			set
			{
				if ((this._ProjectCategoryId != value))
				{
					this.OnProjectCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectCategoryId = value;
					this.SendPropertyChanged("ProjectCategoryId");
					this.OnProjectCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProjectCategory", Storage="_ProjectCategory1", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string ProjectCategory1
		{
			get
			{
				return this._ProjectCategory1;
			}
			set
			{
				if ((this._ProjectCategory1 != value))
				{
					this.OnProjectCategory1Changing(value);
					this.SendPropertyChanging();
					this._ProjectCategory1 = value;
					this.SendPropertyChanged("ProjectCategory1");
					this.OnProjectCategory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectCategory_Project", Storage="_Projects", ThisKey="ProjectCategoryId", OtherKey="ProjectCategoryId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectCategory = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectHdr")]
	public partial class ProjectHdr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectHdrId;
		
		private bool _StdProject;
		
		private string _Code;
		
		private string _ProjectHdrName;
		
		private bool _Active;
		
		private bool _ActiveToAllCustomer;
		
		private System.Nullable<int> _StdActivitySelection;
		
		private string _ItemText;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectHdrIdChanging(int value);
    partial void OnProjectHdrIdChanged();
    partial void OnStdProjectChanging(bool value);
    partial void OnStdProjectChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnProjectHdrNameChanging(string value);
    partial void OnProjectHdrNameChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnActiveToAllCustomerChanging(bool value);
    partial void OnActiveToAllCustomerChanged();
    partial void OnStdActivitySelectionChanging(System.Nullable<int> value);
    partial void OnStdActivitySelectionChanged();
    partial void OnItemTextChanging(string value);
    partial void OnItemTextChanged();
    #endregion
		
		public ProjectHdr()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectHdrId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectHdrId
		{
			get
			{
				return this._ProjectHdrId;
			}
			set
			{
				if ((this._ProjectHdrId != value))
				{
					this.OnProjectHdrIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectHdrId = value;
					this.SendPropertyChanged("ProjectHdrId");
					this.OnProjectHdrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdProject", DbType="Bit NOT NULL")]
		public bool StdProject
		{
			get
			{
				return this._StdProject;
			}
			set
			{
				if ((this._StdProject != value))
				{
					this.OnStdProjectChanging(value);
					this.SendPropertyChanging();
					this._StdProject = value;
					this.SendPropertyChanged("StdProject");
					this.OnStdProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectHdrName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectHdrName
		{
			get
			{
				return this._ProjectHdrName;
			}
			set
			{
				if ((this._ProjectHdrName != value))
				{
					this.OnProjectHdrNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectHdrName = value;
					this.SendPropertyChanged("ProjectHdrName");
					this.OnProjectHdrNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveToAllCustomer", DbType="Bit NOT NULL")]
		public bool ActiveToAllCustomer
		{
			get
			{
				return this._ActiveToAllCustomer;
			}
			set
			{
				if ((this._ActiveToAllCustomer != value))
				{
					this.OnActiveToAllCustomerChanging(value);
					this.SendPropertyChanging();
					this._ActiveToAllCustomer = value;
					this.SendPropertyChanged("ActiveToAllCustomer");
					this.OnActiveToAllCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StdActivitySelection", DbType="Int")]
		public System.Nullable<int> StdActivitySelection
		{
			get
			{
				return this._StdActivitySelection;
			}
			set
			{
				if ((this._StdActivitySelection != value))
				{
					this.OnStdActivitySelectionChanging(value);
					this.SendPropertyChanging();
					this._StdActivitySelection = value;
					this.SendPropertyChanged("StdActivitySelection");
					this.OnStdActivitySelectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemText", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemText
		{
			get
			{
				return this._ItemText;
			}
			set
			{
				if ((this._ItemText != value))
				{
					this.OnItemTextChanging(value);
					this.SendPropertyChanging();
					this._ItemText = value;
					this.SendPropertyChanged("ItemText");
					this.OnItemTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectHdr_Project", Storage="_Projects", ThisKey="ProjectHdrId", OtherKey="ProjectHdrId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectHdr = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.ProjectHdr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private System.Nullable<int> _InvoiceNo;
		
		private System.Nullable<int> _InvoicePartNo;
		
		private System.Nullable<int> _AccountingOrderNo;
		
		private System.Nullable<int> _CustomerId;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.DateTime _EndDate;
		
		private string _InvoiceHeaderText;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<int> _ApprovedId;
		
		private System.Nullable<System.DateTime> _ExportedDate;
		
		private System.Nullable<int> _ExportedId;
		
		private bool _ChangedTxt;
		
		private bool _ShowExtraInvoiceText;
		
		private bool _DetailLevelAccountsYear;
		
		private bool _DetailLevelProject;
		
		private bool _DetailLevelActivity;
		
		private bool _DetailLevelProgramUser;
		
		private bool _DetailLevelDate;
		
		private bool _DetailLevelPartSumAccountsYear;
		
		private bool _DetailLevelPartSumProject;
		
		private bool _DetailLevelPartSumActivity;
		
		private bool _DetailLevelPartSumProgramUser;
		
		private bool _ExtraFUTextInserted;
		
		private System.Nullable<int> _TypeOfInvoiceing;
		
		private System.Nullable<int> _TypeOfInvoice;
		
		private int _ExportInvoiceAs;
		
		private System.Nullable<int> _ReferenceId;
		
		private string _YourReference;
		
		private EntitySet<TimeReport> _TimeReports;
		
		private EntitySet<InvoiceSettingRowDetail> _InvoiceSettingRowDetails;
		
		private EntityRef<ProgramUser> _ProgramUser;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<ProgramUser> _ProgramUser1;
		
		private EntityRef<ProgramUser> _ProgramUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceNoChanging(System.Nullable<int> value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoicePartNoChanging(System.Nullable<int> value);
    partial void OnInvoicePartNoChanged();
    partial void OnAccountingOrderNoChanging(System.Nullable<int> value);
    partial void OnAccountingOrderNoChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnInvoiceHeaderTextChanging(string value);
    partial void OnInvoiceHeaderTextChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnApprovedIdChanging(System.Nullable<int> value);
    partial void OnApprovedIdChanged();
    partial void OnExportedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExportedDateChanged();
    partial void OnExportedIdChanging(System.Nullable<int> value);
    partial void OnExportedIdChanged();
    partial void OnChangedTxtChanging(bool value);
    partial void OnChangedTxtChanged();
    partial void OnShowExtraInvoiceTextChanging(bool value);
    partial void OnShowExtraInvoiceTextChanged();
    partial void OnDetailLevelAccountsYearChanging(bool value);
    partial void OnDetailLevelAccountsYearChanged();
    partial void OnDetailLevelProjectChanging(bool value);
    partial void OnDetailLevelProjectChanged();
    partial void OnDetailLevelActivityChanging(bool value);
    partial void OnDetailLevelActivityChanged();
    partial void OnDetailLevelProgramUserChanging(bool value);
    partial void OnDetailLevelProgramUserChanged();
    partial void OnDetailLevelDateChanging(bool value);
    partial void OnDetailLevelDateChanged();
    partial void OnDetailLevelPartSumAccountsYearChanging(bool value);
    partial void OnDetailLevelPartSumAccountsYearChanged();
    partial void OnDetailLevelPartSumProjectChanging(bool value);
    partial void OnDetailLevelPartSumProjectChanged();
    partial void OnDetailLevelPartSumActivityChanging(bool value);
    partial void OnDetailLevelPartSumActivityChanged();
    partial void OnDetailLevelPartSumProgramUserChanging(bool value);
    partial void OnDetailLevelPartSumProgramUserChanged();
    partial void OnExtraFUTextInsertedChanging(bool value);
    partial void OnExtraFUTextInsertedChanged();
    partial void OnTypeOfInvoiceingChanging(System.Nullable<int> value);
    partial void OnTypeOfInvoiceingChanged();
    partial void OnTypeOfInvoiceChanging(System.Nullable<int> value);
    partial void OnTypeOfInvoiceChanged();
    partial void OnExportInvoiceAsChanging(int value);
    partial void OnExportInvoiceAsChanged();
    partial void OnReferenceIdChanging(System.Nullable<int> value);
    partial void OnReferenceIdChanged();
    partial void OnYourReferenceChanging(string value);
    partial void OnYourReferenceChanged();
    #endregion
		
		public Invoice()
		{
			this._TimeReports = new EntitySet<TimeReport>(new Action<TimeReport>(this.attach_TimeReports), new Action<TimeReport>(this.detach_TimeReports));
			this._InvoiceSettingRowDetails = new EntitySet<InvoiceSettingRowDetail>(new Action<InvoiceSettingRowDetail>(this.attach_InvoiceSettingRowDetails), new Action<InvoiceSettingRowDetail>(this.detach_InvoiceSettingRowDetails));
			this._ProgramUser = default(EntityRef<ProgramUser>);
			this._Customer = default(EntityRef<Customer>);
			this._ProgramUser1 = default(EntityRef<ProgramUser>);
			this._ProgramUser2 = default(EntityRef<ProgramUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int")]
		public System.Nullable<int> InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePartNo", DbType="Int")]
		public System.Nullable<int> InvoicePartNo
		{
			get
			{
				return this._InvoicePartNo;
			}
			set
			{
				if ((this._InvoicePartNo != value))
				{
					this.OnInvoicePartNoChanging(value);
					this.SendPropertyChanging();
					this._InvoicePartNo = value;
					this.SendPropertyChanged("InvoicePartNo");
					this.OnInvoicePartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingOrderNo", DbType="Int")]
		public System.Nullable<int> AccountingOrderNo
		{
			get
			{
				return this._AccountingOrderNo;
			}
			set
			{
				if ((this._AccountingOrderNo != value))
				{
					this.OnAccountingOrderNoChanging(value);
					this.SendPropertyChanging();
					this._AccountingOrderNo = value;
					this.SendPropertyChanged("AccountingOrderNo");
					this.OnAccountingOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceHeaderText", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string InvoiceHeaderText
		{
			get
			{
				return this._InvoiceHeaderText;
			}
			set
			{
				if ((this._InvoiceHeaderText != value))
				{
					this.OnInvoiceHeaderTextChanging(value);
					this.SendPropertyChanging();
					this._InvoiceHeaderText = value;
					this.SendPropertyChanged("InvoiceHeaderText");
					this.OnInvoiceHeaderTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedId", DbType="Int")]
		public System.Nullable<int> ApprovedId
		{
			get
			{
				return this._ApprovedId;
			}
			set
			{
				if ((this._ApprovedId != value))
				{
					if (this._ProgramUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedId = value;
					this.SendPropertyChanged("ApprovedId");
					this.OnApprovedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> ExportedDate
		{
			get
			{
				return this._ExportedDate;
			}
			set
			{
				if ((this._ExportedDate != value))
				{
					this.OnExportedDateChanging(value);
					this.SendPropertyChanging();
					this._ExportedDate = value;
					this.SendPropertyChanged("ExportedDate");
					this.OnExportedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportedId", DbType="Int")]
		public System.Nullable<int> ExportedId
		{
			get
			{
				return this._ExportedId;
			}
			set
			{
				if ((this._ExportedId != value))
				{
					if (this._ProgramUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExportedIdChanging(value);
					this.SendPropertyChanging();
					this._ExportedId = value;
					this.SendPropertyChanged("ExportedId");
					this.OnExportedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedTxt", DbType="Bit NOT NULL")]
		public bool ChangedTxt
		{
			get
			{
				return this._ChangedTxt;
			}
			set
			{
				if ((this._ChangedTxt != value))
				{
					this.OnChangedTxtChanging(value);
					this.SendPropertyChanging();
					this._ChangedTxt = value;
					this.SendPropertyChanged("ChangedTxt");
					this.OnChangedTxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowExtraInvoiceText", DbType="Bit NOT NULL")]
		public bool ShowExtraInvoiceText
		{
			get
			{
				return this._ShowExtraInvoiceText;
			}
			set
			{
				if ((this._ShowExtraInvoiceText != value))
				{
					this.OnShowExtraInvoiceTextChanging(value);
					this.SendPropertyChanging();
					this._ShowExtraInvoiceText = value;
					this.SendPropertyChanged("ShowExtraInvoiceText");
					this.OnShowExtraInvoiceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelAccountsYear", DbType="Bit NOT NULL")]
		public bool DetailLevelAccountsYear
		{
			get
			{
				return this._DetailLevelAccountsYear;
			}
			set
			{
				if ((this._DetailLevelAccountsYear != value))
				{
					this.OnDetailLevelAccountsYearChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelAccountsYear = value;
					this.SendPropertyChanged("DetailLevelAccountsYear");
					this.OnDetailLevelAccountsYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelProject", DbType="Bit NOT NULL")]
		public bool DetailLevelProject
		{
			get
			{
				return this._DetailLevelProject;
			}
			set
			{
				if ((this._DetailLevelProject != value))
				{
					this.OnDetailLevelProjectChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelProject = value;
					this.SendPropertyChanged("DetailLevelProject");
					this.OnDetailLevelProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelActivity", DbType="Bit NOT NULL")]
		public bool DetailLevelActivity
		{
			get
			{
				return this._DetailLevelActivity;
			}
			set
			{
				if ((this._DetailLevelActivity != value))
				{
					this.OnDetailLevelActivityChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelActivity = value;
					this.SendPropertyChanged("DetailLevelActivity");
					this.OnDetailLevelActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelProgramUser", DbType="Bit NOT NULL")]
		public bool DetailLevelProgramUser
		{
			get
			{
				return this._DetailLevelProgramUser;
			}
			set
			{
				if ((this._DetailLevelProgramUser != value))
				{
					this.OnDetailLevelProgramUserChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelProgramUser = value;
					this.SendPropertyChanged("DetailLevelProgramUser");
					this.OnDetailLevelProgramUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelDate", DbType="Bit NOT NULL")]
		public bool DetailLevelDate
		{
			get
			{
				return this._DetailLevelDate;
			}
			set
			{
				if ((this._DetailLevelDate != value))
				{
					this.OnDetailLevelDateChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelDate = value;
					this.SendPropertyChanged("DetailLevelDate");
					this.OnDetailLevelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumAccountsYear", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumAccountsYear
		{
			get
			{
				return this._DetailLevelPartSumAccountsYear;
			}
			set
			{
				if ((this._DetailLevelPartSumAccountsYear != value))
				{
					this.OnDetailLevelPartSumAccountsYearChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumAccountsYear = value;
					this.SendPropertyChanged("DetailLevelPartSumAccountsYear");
					this.OnDetailLevelPartSumAccountsYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumProject", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumProject
		{
			get
			{
				return this._DetailLevelPartSumProject;
			}
			set
			{
				if ((this._DetailLevelPartSumProject != value))
				{
					this.OnDetailLevelPartSumProjectChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumProject = value;
					this.SendPropertyChanged("DetailLevelPartSumProject");
					this.OnDetailLevelPartSumProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumActivity", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumActivity
		{
			get
			{
				return this._DetailLevelPartSumActivity;
			}
			set
			{
				if ((this._DetailLevelPartSumActivity != value))
				{
					this.OnDetailLevelPartSumActivityChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumActivity = value;
					this.SendPropertyChanged("DetailLevelPartSumActivity");
					this.OnDetailLevelPartSumActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailLevelPartSumProgramUser", DbType="Bit NOT NULL")]
		public bool DetailLevelPartSumProgramUser
		{
			get
			{
				return this._DetailLevelPartSumProgramUser;
			}
			set
			{
				if ((this._DetailLevelPartSumProgramUser != value))
				{
					this.OnDetailLevelPartSumProgramUserChanging(value);
					this.SendPropertyChanging();
					this._DetailLevelPartSumProgramUser = value;
					this.SendPropertyChanged("DetailLevelPartSumProgramUser");
					this.OnDetailLevelPartSumProgramUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraFUTextInserted", DbType="Bit NOT NULL")]
		public bool ExtraFUTextInserted
		{
			get
			{
				return this._ExtraFUTextInserted;
			}
			set
			{
				if ((this._ExtraFUTextInserted != value))
				{
					this.OnExtraFUTextInsertedChanging(value);
					this.SendPropertyChanging();
					this._ExtraFUTextInserted = value;
					this.SendPropertyChanged("ExtraFUTextInserted");
					this.OnExtraFUTextInsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvoiceing", DbType="Int")]
		public System.Nullable<int> TypeOfInvoiceing
		{
			get
			{
				return this._TypeOfInvoiceing;
			}
			set
			{
				if ((this._TypeOfInvoiceing != value))
				{
					this.OnTypeOfInvoiceingChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvoiceing = value;
					this.SendPropertyChanged("TypeOfInvoiceing");
					this.OnTypeOfInvoiceingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfInvoice", DbType="Int")]
		public System.Nullable<int> TypeOfInvoice
		{
			get
			{
				return this._TypeOfInvoice;
			}
			set
			{
				if ((this._TypeOfInvoice != value))
				{
					this.OnTypeOfInvoiceChanging(value);
					this.SendPropertyChanging();
					this._TypeOfInvoice = value;
					this.SendPropertyChanged("TypeOfInvoice");
					this.OnTypeOfInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportInvoiceAs", DbType="Int NOT NULL")]
		public int ExportInvoiceAs
		{
			get
			{
				return this._ExportInvoiceAs;
			}
			set
			{
				if ((this._ExportInvoiceAs != value))
				{
					this.OnExportInvoiceAsChanging(value);
					this.SendPropertyChanging();
					this._ExportInvoiceAs = value;
					this.SendPropertyChanged("ExportInvoiceAs");
					this.OnExportInvoiceAsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceId", DbType="Int")]
		public System.Nullable<int> ReferenceId
		{
			get
			{
				return this._ReferenceId;
			}
			set
			{
				if ((this._ReferenceId != value))
				{
					if (this._ProgramUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._ReferenceId = value;
					this.SendPropertyChanged("ReferenceId");
					this.OnReferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YourReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string YourReference
		{
			get
			{
				return this._YourReference;
			}
			set
			{
				if ((this._YourReference != value))
				{
					this.OnYourReferenceChanging(value);
					this.SendPropertyChanging();
					this._YourReference = value;
					this.SendPropertyChanged("YourReference");
					this.OnYourReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_TimeReport", Storage="_TimeReports", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<TimeReport> TimeReports
		{
			get
			{
				return this._TimeReports;
			}
			set
			{
				this._TimeReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceSettingRowDetail", Storage="_InvoiceSettingRowDetails", ThisKey="InvoiceId", OtherKey="InvoiceId")]
		public EntitySet<InvoiceSettingRowDetail> InvoiceSettingRowDetails
		{
			get
			{
				return this._InvoiceSettingRowDetails;
			}
			set
			{
				this._InvoiceSettingRowDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Invoice", Storage="_ProgramUser", ThisKey="ApprovedId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser
		{
			get
			{
				return this._ProgramUser.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._ProgramUser.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._ApprovedId = value.ProgramUserId;
					}
					else
					{
						this._ApprovedId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._CustomerId = value.CustomerId;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Invoice1", Storage="_ProgramUser1", ThisKey="ExportedId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser1
		{
			get
			{
				return this._ProgramUser1.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser1.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser1.Entity = null;
						previousValue.Invoices1.Remove(this);
					}
					this._ProgramUser1.Entity = value;
					if ((value != null))
					{
						value.Invoices1.Add(this);
						this._ExportedId = value.ProgramUserId;
					}
					else
					{
						this._ExportedId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramUser_Invoice2", Storage="_ProgramUser2", ThisKey="ReferenceId", OtherKey="ProgramUserId", IsForeignKey=true)]
		public ProgramUser ProgramUser2
		{
			get
			{
				return this._ProgramUser2.Entity;
			}
			set
			{
				ProgramUser previousValue = this._ProgramUser2.Entity;
				if (((previousValue != value) 
							|| (this._ProgramUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramUser2.Entity = null;
						previousValue.Invoices2.Remove(this);
					}
					this._ProgramUser2.Entity = value;
					if ((value != null))
					{
						value.Invoices2.Add(this);
						this._ReferenceId = value.ProgramUserId;
					}
					else
					{
						this._ReferenceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_TimeReports(TimeReport entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceSettingRowDetails(InvoiceSettingRowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceSettingRowDetails(InvoiceSettingRowDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceSettingRowDetail")]
	public partial class InvoiceSettingRowDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceSettingRowDetailId;
		
		private int _InvoiceId;
		
		private System.Nullable<int> _ResUnitId;
		
		private System.Nullable<int> _ProjectId;
		
		private string _ItemNo;
		
		private System.Nullable<decimal> _Amount;
		
		private string _InvoiceTxt;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<BookResultUnit> _BookResultUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceSettingRowDetailIdChanging(int value);
    partial void OnInvoiceSettingRowDetailIdChanged();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnResUnitIdChanging(System.Nullable<int> value);
    partial void OnResUnitIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnInvoiceTxtChanging(string value);
    partial void OnInvoiceTxtChanged();
    #endregion
		
		public InvoiceSettingRowDetail()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._Project = default(EntityRef<Project>);
			this._BookResultUnit = default(EntityRef<BookResultUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSettingRowDetailId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceSettingRowDetailId
		{
			get
			{
				return this._InvoiceSettingRowDetailId;
			}
			set
			{
				if ((this._InvoiceSettingRowDetailId != value))
				{
					this.OnInvoiceSettingRowDetailIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceSettingRowDetailId = value;
					this.SendPropertyChanged("InvoiceSettingRowDetailId");
					this.OnInvoiceSettingRowDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int NOT NULL")]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResUnitId", DbType="Int")]
		public System.Nullable<int> ResUnitId
		{
			get
			{
				return this._ResUnitId;
			}
			set
			{
				if ((this._ResUnitId != value))
				{
					if (this._BookResultUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ResUnitId = value;
					this.SendPropertyChanged("ResUnitId");
					this.OnResUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTxt", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string InvoiceTxt
		{
			get
			{
				return this._InvoiceTxt;
			}
			set
			{
				if ((this._InvoiceTxt != value))
				{
					this.OnInvoiceTxtChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTxt = value;
					this.SendPropertyChanged("InvoiceTxt");
					this.OnInvoiceTxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceSettingRowDetail", Storage="_Invoice", ThisKey="InvoiceId", OtherKey="InvoiceId", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceSettingRowDetails.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceSettingRowDetails.Add(this);
						this._InvoiceId = value.InvoiceId;
					}
					else
					{
						this._InvoiceId = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_InvoiceSettingRowDetail", Storage="_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.InvoiceSettingRowDetails.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.InvoiceSettingRowDetails.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookResultUnit_InvoiceSettingRowDetail", Storage="_BookResultUnit", ThisKey="ResUnitId", OtherKey="BookResultUnitId", IsForeignKey=true)]
		public BookResultUnit BookResultUnit
		{
			get
			{
				return this._BookResultUnit.Entity;
			}
			set
			{
				BookResultUnit previousValue = this._BookResultUnit.Entity;
				if (((previousValue != value) 
							|| (this._BookResultUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookResultUnit.Entity = null;
						previousValue.InvoiceSettingRowDetails.Remove(this);
					}
					this._BookResultUnit.Entity = value;
					if ((value != null))
					{
						value.InvoiceSettingRowDetails.Add(this);
						this._ResUnitId = value.BookResultUnitId;
					}
					else
					{
						this._ResUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookResultUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ItemName;
		
		private string _ItemNo;
		
		private System.Nullable<decimal> _CalcPriceUnit;
		
		private System.Nullable<decimal> _PriceUnit;
		
		private string _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnCalcPriceUnitChanging(System.Nullable<decimal> value);
    partial void OnCalcPriceUnitChanged();
    partial void OnPriceUnitChanging(System.Nullable<decimal> value);
    partial void OnPriceUnitChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPriceUnit", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> CalcPriceUnit
		{
			get
			{
				return this._CalcPriceUnit;
			}
			set
			{
				if ((this._CalcPriceUnit != value))
				{
					this.OnCalcPriceUnitChanging(value);
					this.SendPropertyChanging();
					this._CalcPriceUnit = value;
					this.SendPropertyChanged("CalcPriceUnit");
					this.OnCalcPriceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceUnit", DbType="Decimal(14,2)")]
		public System.Nullable<decimal> PriceUnit
		{
			get
			{
				return this._PriceUnit;
			}
			set
			{
				if ((this._PriceUnit != value))
				{
					this.OnPriceUnitChanging(value);
					this.SendPropertyChanging();
					this._PriceUnit = value;
					this.SendPropertyChanged("PriceUnit");
					this.OnPriceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
